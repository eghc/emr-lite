{"ast":null,"code":"import _objectWithoutProperties from \"/Users/macuser/Documents/Bloc/capstone__/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/macuser/Documents/Bloc/capstone__/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/macuser/Documents/Bloc/capstone__/client/src/views/Settings/components/Password/index.jsx\";\nimport React, { Component } from 'react'; // Externals\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames'; // Material helpers\n\nimport { withStyles } from '@material-ui/core'; // Material components\n\nimport { Button, TextField } from '@material-ui/core'; // Shared components\n\nimport { Portlet, PortletHeader, PortletLabel, PortletContent, PortletFooter } from 'components'; // Component styles\n\nimport styles from './styles';\n\nclass Password extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      values: {\n        password: '',\n        confirm: ''\n      }\n    };\n\n    this.handleFieldChange = (field, value) => {\n      const newState = _objectSpread({}, this.state);\n\n      newState.values[field] = value;\n      this.setState(newState, this.validateForm);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          className = _this$props.className,\n          rest = _objectWithoutProperties(_this$props, [\"classes\", \"className\"]);\n\n    const values = this.state.values;\n    const rootClassName = classNames(classes.root, className);\n    return React.createElement(Portlet, Object.assign({}, rest, {\n      className: rootClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(PortletHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(PortletLabel, {\n      subtitle: \"Update password\",\n      title: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(PortletContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Password\",\n      name: \"password\",\n      onChange: event => this.handleFieldChange('password', event.target.value),\n      type: \"password\",\n      value: values.password,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Confirm password\",\n      name: \"confirm\",\n      onChange: event => this.handleFieldChange('confirm', event.target.value),\n      type: \"password\",\n      value: values.confirm,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(PortletFooter, {\n      className: classes.portletFooter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Update\")));\n  }\n\n}\n\nPassword.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Password);","map":{"version":3,"sources":["/Users/macuser/Documents/Bloc/capstone__/client/src/views/Settings/components/Password/index.jsx"],"names":["React","Component","PropTypes","classNames","withStyles","Button","TextField","Portlet","PortletHeader","PortletLabel","PortletContent","PortletFooter","styles","Password","state","values","password","confirm","handleFieldChange","field","value","newState","setState","validateForm","render","props","classes","className","rest","rootClassName","root","form","textField","event","target","portletFooter","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n// Externals\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core';\n\n// Material components\nimport { Button, TextField } from '@material-ui/core';\n\n// Shared components\nimport {\n  Portlet,\n  PortletHeader,\n  PortletLabel,\n  PortletContent,\n  PortletFooter\n} from 'components';\n\n// Component styles\nimport styles from './styles';\n\nclass Password extends Component {\n  state = {\n    values: {\n      password: '',\n      confirm: ''\n    }\n  };\n\n  handleFieldChange = (field, value) => {\n    const newState = { ...this.state };\n\n    newState.values[field] = value;\n\n    this.setState(newState, this.validateForm);\n  };\n\n  render() {\n    const { classes, className, ...rest } = this.props;\n    const { values } = this.state;\n\n    const rootClassName = classNames(classes.root, className);\n\n    return (\n      <Portlet\n        {...rest}\n        className={rootClassName}\n      >\n        <PortletHeader>\n          <PortletLabel\n            subtitle=\"Update password\"\n            title=\"Password\"\n          />\n        </PortletHeader>\n        <PortletContent>\n          <form className={classes.form}>\n            <TextField\n              className={classes.textField}\n              label=\"Password\"\n              name=\"password\"\n              onChange={event =>\n                this.handleFieldChange('password', event.target.value)\n              }\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            />\n            <TextField\n              className={classes.textField}\n              label=\"Confirm password\"\n              name=\"confirm\"\n              onChange={event =>\n                this.handleFieldChange('confirm', event.target.value)\n              }\n              type=\"password\"\n              value={values.confirm}\n              variant=\"outlined\"\n            />\n          </form>\n        </PortletContent>\n        <PortletFooter className={classes.portletFooter}>\n          <Button\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            Update\n          </Button>\n        </PortletFooter>\n      </Portlet>\n    );\n  }\n}\n\nPassword.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Password);\n"]},"metadata":{},"sourceType":"module"}