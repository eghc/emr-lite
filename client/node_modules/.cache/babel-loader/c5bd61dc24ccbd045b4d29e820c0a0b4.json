{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/Bloc/capstone__/client/src/views/ProductList/index.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; // Externals\n\nimport PropTypes from 'prop-types'; // Material helpers\n\nimport { withStyles } from '@material-ui/core'; // Material components\n\nimport { IconButton, CircularProgress, Grid, Typography } from '@material-ui/core'; // Material icons\n\nimport { ChevronRight as ChevronRightIcon, ChevronLeft as ChevronLeftIcon } from '@material-ui/icons'; // Shared layouts\n\nimport { Dashboard as DashboardLayout } from 'layouts'; // Shared services\n\nimport { getProducts } from 'services/product'; // Custom components\n\nimport { ProductsToolbar, ProductCard } from './components'; // Component styles\n\nimport styles from './styles';\n\nclass ProductList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.signal = true;\n    this.state = {\n      isLoading: false,\n      limit: 6,\n      products: [],\n      productsTotal: 0,\n      error: null\n    };\n  }\n\n  async getProducts(limit) {\n    try {\n      this.setState({\n        isLoading: true\n      });\n\n      const _ref = await getProducts(limit),\n            products = _ref.products,\n            productsTotal = _ref.productsTotal;\n\n      if (this.signal) {\n        this.setState({\n          isLoading: false,\n          products,\n          productsTotal,\n          limit\n        });\n      }\n    } catch (error) {\n      if (this.signal) {\n        this.setState({\n          isLoading: false,\n          error\n        });\n      }\n    }\n  }\n\n  componentWillMount() {\n    this.signal = true;\n    const limit = this.state.limit;\n    this.getProducts(limit);\n  }\n\n  componentWillUnmount() {\n    this.signal = false;\n  }\n\n  renderProducts() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          products = _this$state.products;\n\n    if (isLoading) {\n      return React.createElement(\"div\", {\n        className: classes.progressWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }));\n    }\n\n    if (products.length === 0) {\n      return React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"There are no products available\");\n    }\n\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, products.map(product => React.createElement(Grid, {\n      item: true,\n      key: product.id,\n      lg: 4,\n      md: 6,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(ProductCard, {\n      product: product,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })))));\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(DashboardLayout, {\n      title: \"Products\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(ProductsToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.renderProducts()), React.createElement(\"div\", {\n      className: classes.pagination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"caption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"1-6 of 20\"), React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(ChevronLeftIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(IconButton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(ChevronRightIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nProductList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(ProductList);","map":{"version":3,"sources":["/Users/macuser/Documents/Bloc/capstone__/client/src/views/ProductList/index.jsx"],"names":["React","Component","Link","PropTypes","withStyles","IconButton","CircularProgress","Grid","Typography","ChevronRight","ChevronRightIcon","ChevronLeft","ChevronLeftIcon","Dashboard","DashboardLayout","getProducts","ProductsToolbar","ProductCard","styles","ProductList","signal","state","isLoading","limit","products","productsTotal","error","setState","componentWillMount","componentWillUnmount","renderProducts","classes","props","progressWrapper","length","map","product","id","render","root","content","pagination","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Externals\nimport PropTypes from 'prop-types';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core';\n\n// Material components\nimport {\n  IconButton,\n  CircularProgress,\n  Grid,\n  Typography\n} from '@material-ui/core';\n\n// Material icons\nimport {\n  ChevronRight as ChevronRightIcon,\n  ChevronLeft as ChevronLeftIcon\n} from '@material-ui/icons';\n\n// Shared layouts\nimport { Dashboard as DashboardLayout } from 'layouts';\n\n// Shared services\nimport { getProducts } from 'services/product';\n\n// Custom components\nimport { ProductsToolbar, ProductCard } from './components';\n\n// Component styles\nimport styles from './styles';\n\nclass ProductList extends Component {\n  signal = true;\n\n  state = {\n    isLoading: false,\n    limit: 6,\n    products: [],\n    productsTotal: 0,\n    error: null\n  };\n\n  async getProducts(limit) {\n    try {\n      this.setState({ isLoading: true });\n\n      const { products, productsTotal } = await getProducts(limit);\n\n      if (this.signal) {\n        this.setState({\n          isLoading: false,\n          products,\n          productsTotal,\n          limit\n        });\n      }\n    } catch (error) {\n      if (this.signal) {\n        this.setState({\n          isLoading: false,\n          error\n        });\n      }\n    }\n  }\n\n  componentWillMount() {\n    this.signal = true;\n\n    const { limit } = this.state;\n\n    this.getProducts(limit);\n  }\n\n  componentWillUnmount() {\n    this.signal = false;\n  }\n\n  renderProducts() {\n    const { classes } = this.props;\n    const { isLoading, products } = this.state;\n\n    if (isLoading) {\n      return (\n        <div className={classes.progressWrapper}>\n          <CircularProgress />\n        </div>\n      );\n    }\n\n    if (products.length === 0) {\n      return (\n        <Typography variant=\"h6\">There are no products available</Typography>\n      );\n    }\n\n    return (\n      <Grid\n        container\n        spacing={3}\n      >\n        {products.map(product => (\n          <Grid\n            item\n            key={product.id}\n            lg={4}\n            md={6}\n            xs={12}\n          >\n            <Link to=\"#\">\n              <ProductCard product={product} />\n            </Link>\n          </Grid>\n        ))}\n      </Grid>\n    );\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <DashboardLayout title=\"Products\">\n        <div className={classes.root}>\n          <ProductsToolbar />\n          <div className={classes.content}>{this.renderProducts()}</div>\n          <div className={classes.pagination}>\n            <Typography variant=\"caption\">1-6 of 20</Typography>\n            <IconButton>\n              <ChevronLeftIcon />\n            </IconButton>\n            <IconButton>\n              <ChevronRightIcon />\n            </IconButton>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n}\n\nProductList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ProductList);\n"]},"metadata":{},"sourceType":"module"}