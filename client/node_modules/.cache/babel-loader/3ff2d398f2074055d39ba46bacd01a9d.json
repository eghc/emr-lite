{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/Bloc/capstone__/client/src/views/UserList/components/UsersTable/index.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; // Externals\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar'; // Material helpers\n\nimport { withStyles } from '@material-ui/core'; // Material components\n\nimport { Avatar, Checkbox, Table, TableBody, TableCell, TableHead, TableRow, Typography, TablePagination, Fragment } from '@material-ui/core'; // Shared helpers\n\nimport { getInitials } from 'helpers'; // Shared components\n\nimport { Portlet, PortletContent } from 'components'; // Component styles\n\nimport styles from './styles';\n\nclass UsersTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: this.props.users,\n      selectedUsers: [],\n      rowsPerPage: 10,\n      page: 0\n    };\n\n    this.handleSelectAll = event => {\n      const _this$props = this.props,\n            users = _this$props.users,\n            onSelect = _this$props.onSelect;\n      let selectedUsers;\n\n      if (event.target.checked) {\n        selectedUsers = users.map(user => user.id);\n      } else {\n        selectedUsers = [];\n      }\n\n      this.setState({\n        selectedUsers\n      });\n      onSelect(selectedUsers);\n    };\n\n    this.handleSelectOne = (event, id) => {\n      const onSelect = this.props.onSelect;\n      const selectedUsers = this.state.selectedUsers;\n      const selectedIndex = selectedUsers.indexOf(id);\n      let newSelectedUsers = [];\n\n      if (selectedIndex === -1) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n      } else if (selectedIndex === 0) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n      } else if (selectedIndex === selectedUsers.length - 1) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, selectedIndex), selectedUsers.slice(selectedIndex + 1));\n      }\n\n      this.setState({\n        selectedUsers: newSelectedUsers\n      });\n      onSelect(newSelectedUsers);\n    };\n\n    this.handleChangePage = (event, page) => {\n      this.setState({\n        page\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n  }\n\n  async getPatients(begin, limit) {\n    const response = await fetch('/getPatients/' + begin + '/' + limit);\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n\n    return body;\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          classes = _this$props2.classes,\n          className = _this$props2.className;\n    const _this$state = this.state,\n          activeTab = _this$state.activeTab,\n          selectedUsers = _this$state.selectedUsers,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          users = _this$state.users;\n    const rootClassName = classNames(classes.root, className);\n    return React.createElement(Portlet, {\n      className: rootClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(PortletContent, {\n      noPadding: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(PerfectScrollbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: selectedUsers.length === users.length,\n      color: \"primary\",\n      indeterminate: selectedUsers.length > 0 && selectedUsers.length < users.length,\n      onChange: this.handleSelectAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), \"Name\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"ID\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"DOB\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Next Appointment\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, users.filter(user => {\n      if (activeTab === 1) {\n        return !user.returning;\n      }\n\n      if (activeTab === 2) {\n        return user.returning;\n      }\n\n      return user;\n    }).slice(0, rowsPerPage).map(user => React.createElement(TableRow, {\n      className: classes.tableRow,\n      hover: true,\n      key: user.id,\n      selected: selectedUsers.indexOf(user.id) !== -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      className: classes.tableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.tableCellInner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: selectedUsers.indexOf(user.id) !== -1,\n      color: \"primary\",\n      onChange: event => this.handleSelectOne(event, user.id),\n      value: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(Avatar, {\n      className: classes.avatar,\n      src: user.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, getInitials(user.firstname)), React.createElement(Link, {\n      to: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.nameText,\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, user.firstname, \" \", user.lastname)))), React.createElement(TableCell, {\n      className: classes.tableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, user.id), React.createElement(TableCell, {\n      className: classes.tableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, moment(user.dob).format('MM/DD/YYYY')), React.createElement(TableCell, {\n      className: classes.tableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, moment(user.createdAt).format('MM/DD/YYYY'))))))), React.createElement(TablePagination, {\n      backIconButtonProps: {\n        'aria-label': 'Previous Page',\n        'onClick': this.loadPreviousPage\n      },\n      component: \"div\",\n      count: users.length,\n      nextIconButtonProps: {\n        'aria-label': 'Next Page',\n        'onClick': this.loadPreviousPage\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      page: page,\n      rowsPerPage: rowsPerPage,\n      rowsPerPageOptions: [],\n      labelRowsPerPage: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })));\n  }\n\n}\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  onSelect: PropTypes.func,\n  onShowDetails: PropTypes.func,\n  users: PropTypes.array.isRequired\n};\nUsersTable.defaultProps = {\n  users: [],\n  onSelect: () => {},\n  onShowDetails: () => {}\n};\nexport default withStyles(styles)(UsersTable);","map":{"version":3,"sources":["/Users/macuser/Documents/Bloc/capstone__/client/src/views/UserList/components/UsersTable/index.jsx"],"names":["React","Component","Link","classNames","PropTypes","moment","PerfectScrollbar","withStyles","Avatar","Checkbox","Table","TableBody","TableCell","TableHead","TableRow","Typography","TablePagination","Fragment","getInitials","Portlet","PortletContent","styles","UsersTable","state","users","props","selectedUsers","rowsPerPage","page","handleSelectAll","event","onSelect","target","checked","map","user","id","setState","handleSelectOne","selectedIndex","indexOf","newSelectedUsers","concat","slice","length","handleChangePage","handleChangeRowsPerPage","value","getPatients","begin","limit","response","fetch","body","json","status","Error","message","render","classes","className","activeTab","rootClassName","root","filter","returning","tableRow","tableCell","tableCellInner","avatar","icon","firstname","nameText","lastname","dob","format","createdAt","loadPreviousPage","propTypes","string","object","isRequired","func","onShowDetails","array","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B,C,CAEA;;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CAEA;;AACA,SACEC,MADF,EAEEC,QAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,QAPF,EAQEC,UARF,EASEC,eATF,EAUEC,QAVF,QAWO,mBAXP,C,CAaA;;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CAEA;;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,YAAxC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,UAAN,SAAyBrB,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCsB,KADiC,GACzB;AACNC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADZ;AAENE,MAAAA,aAAa,EAAE,EAFT;AAGNC,MAAAA,WAAW,EAAE,EAHP;AAINC,MAAAA,IAAI,EAAE;AAJA,KADyB;;AAAA,SAkBjCC,eAlBiC,GAkBfC,KAAK,IAAI;AAAA,0BACG,KAAKL,KADR;AAAA,YACjBD,KADiB,eACjBA,KADiB;AAAA,YACVO,QADU,eACVA,QADU;AAGzB,UAAIL,aAAJ;;AAEA,UAAII,KAAK,CAACE,MAAN,CAAaC,OAAjB,EAA0B;AACxBP,QAAAA,aAAa,GAAGF,KAAK,CAACU,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,EAAvB,CAAhB;AACD,OAFD,MAEO;AACLV,QAAAA,aAAa,GAAG,EAAhB;AACD;;AAED,WAAKW,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AAEAK,MAAAA,QAAQ,CAACL,aAAD,CAAR;AACD,KAhCgC;;AAAA,SAkCjCY,eAlCiC,GAkCf,CAACR,KAAD,EAAQM,EAAR,KAAe;AAAA,YACvBL,QADuB,GACV,KAAKN,KADK,CACvBM,QADuB;AAAA,YAEvBL,aAFuB,GAEL,KAAKH,KAFA,CAEvBG,aAFuB;AAI/B,YAAMa,aAAa,GAAGb,aAAa,CAACc,OAAd,CAAsBJ,EAAtB,CAAtB;AACA,UAAIK,gBAAgB,GAAG,EAAvB;;AAEA,UAAIF,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBE,QAAAA,gBAAgB,GAAGA,gBAAgB,CAACC,MAAjB,CAAwBhB,aAAxB,EAAuCU,EAAvC,CAAnB;AACD,OAFD,MAEO,IAAIG,aAAa,KAAK,CAAtB,EAAyB;AAC9BE,QAAAA,gBAAgB,GAAGA,gBAAgB,CAACC,MAAjB,CAAwBhB,aAAa,CAACiB,KAAd,CAAoB,CAApB,CAAxB,CAAnB;AACD,OAFM,MAEA,IAAIJ,aAAa,KAAKb,aAAa,CAACkB,MAAd,GAAuB,CAA7C,EAAgD;AACrDH,QAAAA,gBAAgB,GAAGA,gBAAgB,CAACC,MAAjB,CAAwBhB,aAAa,CAACiB,KAAd,CAAoB,CAApB,EAAuB,CAAC,CAAxB,CAAxB,CAAnB;AACD,OAFM,MAEA,IAAIJ,aAAa,GAAG,CAApB,EAAuB;AAC5BE,QAAAA,gBAAgB,GAAGA,gBAAgB,CAACC,MAAjB,CACjBhB,aAAa,CAACiB,KAAd,CAAoB,CAApB,EAAuBJ,aAAvB,CADiB,EAEjBb,aAAa,CAACiB,KAAd,CAAoBJ,aAAa,GAAG,CAApC,CAFiB,CAAnB;AAID;;AAED,WAAKF,QAAL,CAAc;AAAEX,QAAAA,aAAa,EAAEe;AAAjB,OAAd;AAEAV,MAAAA,QAAQ,CAACU,gBAAD,CAAR;AACD,KAzDgC;;AAAA,SA2DjCI,gBA3DiC,GA2Dd,CAACf,KAAD,EAAQF,IAAR,KAAiB;AAClC,WAAKS,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACD,KA7DgC;;AAAA,SA+DjCkB,uBA/DiC,GA+DPhB,KAAK,IAAI;AACjC,WAAKO,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAEG,KAAK,CAACE,MAAN,CAAae;AAA5B,OAAd;AACD,KAjEgC;AAAA;;AAQjC,QAAMC,WAAN,CAAmBC,KAAnB,EAA0BC,KAA1B,EAAgC;AAC9B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkBH,KAAlB,GAA0B,GAA1B,GAA+BC,KAAhC,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,QAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,WAAOJ,IAAP;AACD;;AAmDDK,EAAAA,MAAM,GAAG;AAAA,yBACwB,KAAKjC,KAD7B;AAAA,UACCkC,OADD,gBACCA,OADD;AAAA,UACUC,SADV,gBACUA,SADV;AAAA,wBAEwD,KAAKrC,KAF7D;AAAA,UAECsC,SAFD,eAECA,SAFD;AAAA,UAEYnC,aAFZ,eAEYA,aAFZ;AAAA,UAE2BC,WAF3B,eAE2BA,WAF3B;AAAA,UAEwCC,IAFxC,eAEwCA,IAFxC;AAAA,UAE8CJ,KAF9C,eAE8CA,KAF9C;AAIP,UAAMsC,aAAa,GAAG3D,UAAU,CAACwD,OAAO,CAACI,IAAT,EAAeH,SAAf,CAAhC;AAEA,WACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAEE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAgB,MAAA,SAAS,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAEpC,aAAa,CAACkB,MAAd,KAAyBpB,KAAK,CAACoB,MAD1C;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,aAAa,EACXlB,aAAa,CAACkB,MAAd,GAAuB,CAAvB,IACAlB,aAAa,CAACkB,MAAd,GAAuBpB,KAAK,CAACoB,MALjC;AAOE,MAAA,QAAQ,EAAE,KAAKf,eAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,SADF,EAaE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,EAcE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdF,EAeE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAfF,CADF,CADF,EAoBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,KAAK,CACHwC,MADF,CACS7B,IAAI,IAAI;AACd,UAAI0B,SAAS,KAAK,CAAlB,EAAqB;AACnB,eAAO,CAAC1B,IAAI,CAAC8B,SAAb;AACD;;AAED,UAAIJ,SAAS,KAAK,CAAlB,EAAqB;AACnB,eAAO1B,IAAI,CAAC8B,SAAZ;AACD;;AAED,aAAO9B,IAAP;AACD,KAXF,EAYEQ,KAZF,CAYQ,CAZR,EAYWhB,WAZX,EAaEO,GAbF,CAaMC,IAAI,IACP,oBAAC,QAAD;AACE,MAAA,SAAS,EAAEwB,OAAO,CAACO,QADrB;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,GAAG,EAAE/B,IAAI,CAACC,EAHZ;AAIE,MAAA,QAAQ,EAAEV,aAAa,CAACc,OAAd,CAAsBL,IAAI,CAACC,EAA3B,MAAmC,CAAC,CAJhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEuB,OAAO,CAACQ,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAER,OAAO,CAACS,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE1C,aAAa,CAACc,OAAd,CAAsBL,IAAI,CAACC,EAA3B,MAAmC,CAAC,CAD/C;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,QAAQ,EAAEN,KAAK,IACb,KAAKQ,eAAL,CAAqBR,KAArB,EAA4BK,IAAI,CAACC,EAAjC,CAJJ;AAME,MAAA,KAAK,EAAC,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAEuB,OAAO,CAACU,MADrB;AAEE,MAAA,GAAG,EAAElC,IAAI,CAACmC,IAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGpD,WAAW,CAACiB,IAAI,CAACoC,SAAN,CAJd,CATF,EAeE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,SAAS,EAAEZ,OAAO,CAACa,QADrB;AAEE,MAAA,OAAO,EAAC,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGrC,IAAI,CAACoC,SAJR,OAIoBpC,IAAI,CAACsC,QAJzB,CADF,CAfF,CADF,CANF,EAgCE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEd,OAAO,CAACQ,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhC,IAAI,CAACC,EADR,CAhCF,EAmCE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEuB,OAAO,CAACQ,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG9D,MAAM,CAAC8B,IAAI,CAACuC,GAAN,CAAN,CAAiBC,MAAjB,CAAwB,YAAxB,CADH,CAnCF,EAsCE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEhB,OAAO,CAACQ,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG9D,MAAM,CAAC8B,IAAI,CAACyC,SAAN,CAAN,CAAuBD,MAAvB,CAA8B,YAA9B,CADH,CAtCF,CAdH,CADH,CApBF,CADF,CADF,EAmFE,oBAAC,eAAD;AACE,MAAA,mBAAmB,EAAE;AACnB,sBAAc,eADK;AAEnB,mBAAW,KAAKE;AAFG,OADvB;AAKE,MAAA,SAAS,EAAC,KALZ;AAME,MAAA,KAAK,EAAErD,KAAK,CAACoB,MANf;AAOE,MAAA,mBAAmB,EAAE;AACnB,sBAAc,WADK;AAEnB,mBAAW,KAAKiC;AAFG,OAPvB;AAWE,MAAA,YAAY,EAAE,KAAKhC,gBAXrB;AAYE,MAAA,mBAAmB,EAAE,KAAKC,uBAZ5B;AAaE,MAAA,IAAI,EAAElB,IAbR;AAcE,MAAA,WAAW,EAAED,WAdf;AAeE,MAAA,kBAAkB,EAAE,EAftB;AAgBE,MAAA,gBAAgB,EAAC,EAhBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnFF,CADF,CADF;AA0GD;;AAnLgC;;AAsLnCL,UAAU,CAACwD,SAAX,GAAuB;AACrBlB,EAAAA,SAAS,EAAExD,SAAS,CAAC2E,MADA;AAErBpB,EAAAA,OAAO,EAAEvD,SAAS,CAAC4E,MAAV,CAAiBC,UAFL;AAGrBlD,EAAAA,QAAQ,EAAE3B,SAAS,CAAC8E,IAHC;AAIrBC,EAAAA,aAAa,EAAE/E,SAAS,CAAC8E,IAJJ;AAKrB1D,EAAAA,KAAK,EAAEpB,SAAS,CAACgF,KAAV,CAAgBH;AALF,CAAvB;AAQA3D,UAAU,CAAC+D,YAAX,GAA0B;AACxB7D,EAAAA,KAAK,EAAE,EADiB;AAExBO,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFM;AAGxBoD,EAAAA,aAAa,EAAE,MAAM,CAAE;AAHC,CAA1B;AAMA,eAAe5E,UAAU,CAACc,MAAD,CAAV,CAAmBC,UAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Externals\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core';\n\n// Material components\nimport {\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination,\n  Fragment\n} from '@material-ui/core';\n\n// Shared helpers\nimport { getInitials } from 'helpers';\n\n// Shared components\nimport { Portlet, PortletContent } from 'components';\n\n// Component styles\nimport styles from './styles';\n\nclass UsersTable extends Component {\n  state = {\n    users: this.props.users,\n    selectedUsers: [],\n    rowsPerPage: 10,\n    page: 0\n  };\n\n  async getPatients (begin, limit){\n    const response = await fetch('/getPatients/' + begin + '/'+ limit );\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n    return body;\n  };\n\n  handleSelectAll = event => {\n    const { users, onSelect } = this.props;\n\n    let selectedUsers;\n\n    if (event.target.checked) {\n      selectedUsers = users.map(user => user.id);\n    } else {\n      selectedUsers = [];\n    }\n\n    this.setState({ selectedUsers });\n\n    onSelect(selectedUsers);\n  };\n\n  handleSelectOne = (event, id) => {\n    const { onSelect } = this.props;\n    const { selectedUsers } = this.state;\n\n    const selectedIndex = selectedUsers.indexOf(id);\n    let newSelectedUsers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n    } else if (selectedIndex === selectedUsers.length - 1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedUsers = newSelectedUsers.concat(\n        selectedUsers.slice(0, selectedIndex),\n        selectedUsers.slice(selectedIndex + 1)\n      );\n    }\n\n    this.setState({ selectedUsers: newSelectedUsers });\n\n    onSelect(newSelectedUsers);\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const { classes, className } = this.props;\n    const { activeTab, selectedUsers, rowsPerPage, page, users } = this.state;\n\n    const rootClassName = classNames(classes.root, className);\n\n    return (\n      <Portlet className={rootClassName}>\n        <PortletContent noPadding>\n          <PerfectScrollbar>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"left\">\n                    <Checkbox\n                      checked={selectedUsers.length === users.length}\n                      color=\"primary\"\n                      indeterminate={\n                        selectedUsers.length > 0 &&\n                        selectedUsers.length < users.length\n                      }\n                      onChange={this.handleSelectAll}\n                    />\n                    Name\n                  </TableCell>\n                  <TableCell align=\"left\">ID</TableCell>\n                  <TableCell align=\"left\">DOB</TableCell>\n                  <TableCell align=\"left\">Next Appointment</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users\n                  .filter(user => {\n                    if (activeTab === 1) {\n                      return !user.returning;\n                    }\n\n                    if (activeTab === 2) {\n                      return user.returning;\n                    }\n\n                    return user;\n                  })\n                  .slice(0, rowsPerPage)\n                  .map(user => (\n                    <TableRow\n                      className={classes.tableRow}\n                      hover\n                      key={user.id}\n                      selected={selectedUsers.indexOf(user.id) !== -1}\n                    >\n                      <TableCell className={classes.tableCell}>\n                        <div className={classes.tableCellInner}>\n                          <Checkbox\n                            checked={selectedUsers.indexOf(user.id) !== -1}\n                            color=\"primary\"\n                            onChange={event =>\n                              this.handleSelectOne(event, user.id)\n                            }\n                            value=\"true\"\n                          />\n                          <Avatar\n                            className={classes.avatar}\n                            src={user.icon}\n                          >\n                            {getInitials(user.firstname)}\n                          </Avatar>\n                          <Link to=\"#\">\n                            <Typography\n                              className={classes.nameText}\n                              variant=\"body1\"\n                            >\n                              {user.firstname} {user.lastname}\n                            </Typography>\n                          </Link>\n                        </div>\n                      </TableCell>\n                      <TableCell className={classes.tableCell}>\n                        {user.id}\n                      </TableCell>\n                      <TableCell className={classes.tableCell}>\n                        {moment(user.dob).format('MM/DD/YYYY')}\n                      </TableCell>\n                      <TableCell className={classes.tableCell}>\n                        {moment(user.createdAt).format('MM/DD/YYYY')}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </PerfectScrollbar>\n          <TablePagination\n            backIconButtonProps={{\n              'aria-label': 'Previous Page',\n              'onClick': this.loadPreviousPage\n            }}\n            component=\"div\"\n            count={users.length}\n            nextIconButtonProps={{\n              'aria-label': 'Next Page',\n              'onClick': this.loadPreviousPage\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[]}\n            labelRowsPerPage=''\n          />\n        </PortletContent>\n      </Portlet>\n    );\n  }\n}\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  onSelect: PropTypes.func,\n  onShowDetails: PropTypes.func,\n  users: PropTypes.array.isRequired\n};\n\nUsersTable.defaultProps = {\n  users: [],\n  onSelect: () => {},\n  onShowDetails: () => {}\n};\n\nexport default withStyles(styles)(UsersTable);\n"]},"metadata":{},"sourceType":"module"}