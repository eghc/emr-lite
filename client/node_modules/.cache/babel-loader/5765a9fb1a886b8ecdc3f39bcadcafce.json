{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/Bloc/capstone__/client/src/App.jsx\";\nimport React, { Component } from 'react';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history'; // Externals\n\nimport { Chart } from 'react-chartjs-2'; // Material helpers\n\nimport { ThemeProvider } from '@material-ui/styles'; // ChartJS helpers\n\nimport { chartjs } from './helpers'; // Theme\n\nimport theme from './theme'; // Styles\n\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport './assets/scss/index.scss'; // Routes\n\nimport Routes from './Routes'; // Browser history\n\nconst browserHistory = createBrowserHistory(); // Configure ChartJS\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw: chartjs.draw\n});\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: ''\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/hello');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch('/api/world', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    console.log(this.state.response);\n    return React.createElement(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Router, {\n      history: browserHistory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Routes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/macuser/Documents/Bloc/capstone__/client/src/App.jsx"],"names":["React","Component","Router","createBrowserHistory","Chart","ThemeProvider","chartjs","theme","Routes","browserHistory","helpers","extend","elements","Rectangle","prototype","draw","App","state","response","post","responseToPost","callApi","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","text","setState","componentDidMount","then","res","express","catch","err","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,oBAAT,QAAqC,SAArC,C,CAEA;;AACA,SAASC,KAAT,QAAsB,iBAAtB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,qBAA9B,C,CAEA;;AACA,SAASC,OAAT,QAAwB,WAAxB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;AACA,OAAO,6CAAP;AACA,OAAO,0BAAP,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,MAAMC,cAAc,GAAGN,oBAAoB,EAA3C,C,CAEA;;AACAC,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBP,KAAK,CAACQ,QAAN,CAAeC,SAAf,CAAyBC,SAA9C,EAAyD;AACvDC,EAAAA,IAAI,EAAET,OAAO,CAACS;AADyC,CAAzD;AAIA,eAAe,MAAMC,GAAN,SAAkBf,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCgB,KADyC,GACjC;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,cAAc,EAAE;AAHV,KADiC;;AAAA,SAazCC,OAbyC,GAa/B,YAAY;AACpB,YAAMH,QAAQ,GAAG,MAAMI,KAAK,CAAC,YAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACA,UAAIN,QAAQ,CAACO,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AAC7B,aAAOJ,IAAP;AACD,KAlBwC;;AAAA,SAmBzCK,YAnByC,GAmB1B,MAAMC,CAAN,IAAW;AACxBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMZ,QAAQ,GAAG,MAAMI,KAAK,CAAC,YAAD,EAAe;AACzCS,QAAAA,MAAM,EAAE,MADiC;AAEzCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFgC;AAKzCT,QAAAA,IAAI,EAAEU,IAAI,CAACC,SAAL,CAAe;AAAEf,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AAAnB,SAAf;AALmC,OAAf,CAA5B;AAOA,YAAMI,IAAI,GAAG,MAAML,QAAQ,CAACiB,IAAT,EAAnB;AACA,WAAKC,QAAL,CAAc;AAAEhB,QAAAA,cAAc,EAAEG;AAAlB,OAAd;AACD,KA9BwC;AAAA;;AAOzCc,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,OAAL,GACGiB,IADH,CACQC,GAAG,IAAI,KAAKH,QAAL,CAAc;AAAElB,MAAAA,QAAQ,EAAEqB,GAAG,CAACC;AAAhB,KAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGD;;AAoBDG,EAAAA,MAAM,GAAG;AACPF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAL,CAAWC,QAAvB;AACA,WACE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAEX,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEE,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AAxCwC","sourcesContent":["import React, { Component } from 'react';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\n// Externals\nimport { Chart } from 'react-chartjs-2';\n\n// Material helpers\nimport { ThemeProvider } from '@material-ui/styles';\n\n// ChartJS helpers\nimport { chartjs } from './helpers';\n\n// Theme\nimport theme from './theme';\n\n// Styles\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport './assets/scss/index.scss';\n\n// Routes\nimport Routes from './Routes';\n\n// Browser history\nconst browserHistory = createBrowserHistory();\n\n// Configure ChartJS\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw: chartjs.draw\n});\n\nexport default class App extends Component {\n  state = {\n    response: '',\n    post: '',\n    responseToPost: '',\n  };\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/world', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n    this.setState({ responseToPost: body });\n  };\n  render() {\n    console.log(this.state.response);\n    return (\n      <ThemeProvider theme={theme}>\n        <Router history={browserHistory}>\n          <Routes />\n        </Router>\n      </ThemeProvider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}