{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/Bloc/capstone__/client/src/views/UserList/components/UsersTable/index.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom'; // Externals\n\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar'; // Material helpers\n\nimport { withStyles } from '@material-ui/core'; // Material components\n\nimport { Avatar, Checkbox, Table, TableBody, TableCell, TableHead, TableRow, Typography, TablePagination } from '@material-ui/core'; // Shared helpers\n\nimport { getInitials } from 'helpers'; // Shared components\n\nimport { Portlet, PortletContent } from 'components'; // Component styles\n\nimport styles from './styles';\n\nclass UsersTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedUsers: [],\n      rowsPerPage: 10,\n      page: 0,\n      users: this.props.users\n    };\n\n    this.handleSelectAll = event => {\n      const users = this.state.users.users;\n      const onSelect = this.props.onSelect;\n      let selectedUsers;\n\n      if (event.target.checked) {\n        selectedUsers = users.map(user => user.id);\n      } else {\n        selectedUsers = [];\n      }\n\n      this.setState({\n        selectedUsers\n      });\n      onSelect(selectedUsers);\n    };\n\n    this.handleSelectOne = (event, id) => {\n      const onSelect = this.props.onSelect;\n      const selectedUsers = this.state.selectedUsers;\n      const selectedIndex = selectedUsers.indexOf(id);\n      let newSelectedUsers = [];\n\n      if (selectedIndex === -1) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n      } else if (selectedIndex === 0) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n      } else if (selectedIndex === selectedUsers.length - 1) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, selectedIndex), selectedUsers.slice(selectedIndex + 1));\n      }\n\n      this.setState({\n        selectedUsers: newSelectedUsers\n      });\n      onSelect(newSelectedUsers);\n    };\n\n    this.handleChangePage = (event, page) => {\n      this.setState({\n        page\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          className = _this$props.className;\n    const _this$state = this.state,\n          activeTab = _this$state.activeTab,\n          selectedUsers = _this$state.selectedUsers,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          users = _this$state.users;\n    const rootClassName = classNames(classes.root, className);\n    return React.createElement(Portlet, {\n      className: rootClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(PortletContent, {\n      noPadding: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(PerfectScrollbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: selectedUsers.length === users.length,\n      color: \"primary\",\n      indeterminate: selectedUsers.length > 0 && selectedUsers.length < users.length,\n      onChange: this.handleSelectAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), \"Name\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"ID\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"DOB\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Gender\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, users.slice(this.state.page * 10, this.state.page * 10 + rowsPerPage).map(user => React.createElement(TableRow, {\n      className: classes.tableRow,\n      hover: true,\n      key: user.id,\n      selected: selectedUsers.indexOf(user.id) !== -1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      className: classes.tableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.tableCellInner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: selectedUsers.indexOf(user.id) !== -1,\n      color: \"primary\",\n      onChange: event => this.handleSelectOne(event, user.id),\n      value: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Avatar, {\n      className: classes.avatar,\n      src: user.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, getInitials(user.firstname)), React.createElement(Link, {\n      to: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.nameText,\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, user.firstname, \" \", user.lastname)))), React.createElement(TableCell, {\n      className: classes.tableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, user.id), React.createElement(TableCell, {\n      className: classes.tableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, moment(user.dob).format('DD/MM/YYYY')), React.createElement(TableCell, {\n      className: classes.tableCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, user.gender)))))), React.createElement(TablePagination, {\n      backIconButtonProps: {\n        'aria-label': 'Previous Page'\n      },\n      component: \"div\",\n      count: users.length,\n      nextIconButtonProps: {\n        'aria-label': 'Next Page'\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      page: page,\n      rowsPerPage: rowsPerPage,\n      rowsPerPageOptions: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })));\n  }\n\n}\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  onSelect: PropTypes.func,\n  onShowDetails: PropTypes.func,\n  users: PropTypes.array.isRequired\n};\nUsersTable.defaultProps = {\n  users: [],\n  onSelect: () => {},\n  onShowDetails: () => {}\n};\nexport default withStyles(styles)(UsersTable);","map":{"version":3,"sources":["/Users/macuser/Documents/Bloc/capstone__/client/src/views/UserList/components/UsersTable/index.jsx"],"names":["React","Component","Link","classNames","PropTypes","moment","PerfectScrollbar","withStyles","Avatar","Checkbox","Table","TableBody","TableCell","TableHead","TableRow","Typography","TablePagination","getInitials","Portlet","PortletContent","styles","UsersTable","state","selectedUsers","rowsPerPage","page","users","props","handleSelectAll","event","onSelect","target","checked","map","user","id","setState","handleSelectOne","selectedIndex","indexOf","newSelectedUsers","concat","slice","length","handleChangePage","handleChangeRowsPerPage","value","render","classes","className","activeTab","rootClassName","root","tableRow","tableCell","tableCellInner","avatar","icon","firstname","nameText","lastname","dob","format","gender","propTypes","string","object","isRequired","func","onShowDetails","array","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B,C,CAEA;;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CAEA;;AACA,SACEC,MADF,EAEEC,QAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,QAPF,EAQEC,UARF,EASEC,eATF,QAUO,mBAVP,C,CAYA;;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CAEA;;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,YAAxC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,UAAN,SAAyBpB,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCqB,KADiC,GACzB;AACNC,MAAAA,aAAa,EAAE,EADT;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,IAAI,EAAE,CAHA;AAINC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD;AAJZ,KADyB;;AAAA,SAQjCE,eARiC,GAQfC,KAAK,IAAI;AAAA,YACjBH,KADiB,GACR,KAAKJ,KAAL,CAAWI,KADH,CACjBA,KADiB;AAAA,YAEhBI,QAFgB,GAEH,KAAKH,KAFF,CAEhBG,QAFgB;AAIzB,UAAIP,aAAJ;;AAEA,UAAIM,KAAK,CAACE,MAAN,CAAaC,OAAjB,EAA0B;AACxBT,QAAAA,aAAa,GAAGG,KAAK,CAACO,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,EAAvB,CAAhB;AACD,OAFD,MAEO;AACLZ,QAAAA,aAAa,GAAG,EAAhB;AACD;;AAED,WAAKa,QAAL,CAAc;AAAEb,QAAAA;AAAF,OAAd;AAEAO,MAAAA,QAAQ,CAACP,aAAD,CAAR;AACD,KAvBgC;;AAAA,SAyBjCc,eAzBiC,GAyBf,CAACR,KAAD,EAAQM,EAAR,KAAe;AAAA,YACvBL,QADuB,GACV,KAAKH,KADK,CACvBG,QADuB;AAAA,YAEvBP,aAFuB,GAEL,KAAKD,KAFA,CAEvBC,aAFuB;AAI/B,YAAMe,aAAa,GAAGf,aAAa,CAACgB,OAAd,CAAsBJ,EAAtB,CAAtB;AACA,UAAIK,gBAAgB,GAAG,EAAvB;;AAEA,UAAIF,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBE,QAAAA,gBAAgB,GAAGA,gBAAgB,CAACC,MAAjB,CAAwBlB,aAAxB,EAAuCY,EAAvC,CAAnB;AACD,OAFD,MAEO,IAAIG,aAAa,KAAK,CAAtB,EAAyB;AAC9BE,QAAAA,gBAAgB,GAAGA,gBAAgB,CAACC,MAAjB,CAAwBlB,aAAa,CAACmB,KAAd,CAAoB,CAApB,CAAxB,CAAnB;AACD,OAFM,MAEA,IAAIJ,aAAa,KAAKf,aAAa,CAACoB,MAAd,GAAuB,CAA7C,EAAgD;AACrDH,QAAAA,gBAAgB,GAAGA,gBAAgB,CAACC,MAAjB,CAAwBlB,aAAa,CAACmB,KAAd,CAAoB,CAApB,EAAuB,CAAC,CAAxB,CAAxB,CAAnB;AACD,OAFM,MAEA,IAAIJ,aAAa,GAAG,CAApB,EAAuB;AAC5BE,QAAAA,gBAAgB,GAAGA,gBAAgB,CAACC,MAAjB,CACjBlB,aAAa,CAACmB,KAAd,CAAoB,CAApB,EAAuBJ,aAAvB,CADiB,EAEjBf,aAAa,CAACmB,KAAd,CAAoBJ,aAAa,GAAG,CAApC,CAFiB,CAAnB;AAID;;AAED,WAAKF,QAAL,CAAc;AAAEb,QAAAA,aAAa,EAAEiB;AAAjB,OAAd;AAEAV,MAAAA,QAAQ,CAACU,gBAAD,CAAR;AACD,KAhDgC;;AAAA,SAkDjCI,gBAlDiC,GAkDd,CAACf,KAAD,EAAQJ,IAAR,KAAiB;AAClC,WAAKW,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AACD,KApDgC;;AAAA,SAsDjCoB,uBAtDiC,GAsDPhB,KAAK,IAAI;AACjC,WAAKO,QAAL,CAAc;AAAEZ,QAAAA,WAAW,EAAEK,KAAK,CAACE,MAAN,CAAae;AAA5B,OAAd;AACD,KAxDgC;AAAA;;AA0DjCC,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKpB,KAD7B;AAAA,UACCqB,OADD,eACCA,OADD;AAAA,UACUC,SADV,eACUA,SADV;AAAA,wBAEwD,KAAK3B,KAF7D;AAAA,UAEC4B,SAFD,eAECA,SAFD;AAAA,UAEY3B,aAFZ,eAEYA,aAFZ;AAAA,UAE2BC,WAF3B,eAE2BA,WAF3B;AAAA,UAEwCC,IAFxC,eAEwCA,IAFxC;AAAA,UAE8CC,KAF9C,eAE8CA,KAF9C;AAIP,UAAMyB,aAAa,GAAGhD,UAAU,CAAC6C,OAAO,CAACI,IAAT,EAAeH,SAAf,CAAhC;AAEA,WACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAEE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAgB,MAAA,SAAS,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE5B,aAAa,CAACoB,MAAd,KAAyBjB,KAAK,CAACiB,MAD1C;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,aAAa,EACXpB,aAAa,CAACoB,MAAd,GAAuB,CAAvB,IACApB,aAAa,CAACoB,MAAd,GAAuBjB,KAAK,CAACiB,MALjC;AAOE,MAAA,QAAQ,EAAE,KAAKf,eAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,SADF,EAaE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,EAcE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdF,EAeE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,CADF,CADF,EAoBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,KAAK,CAEHgB,KAFF,CAEQ,KAAKpB,KAAL,CAAWG,IAAX,GAAgB,EAFxB,EAE4B,KAAKH,KAAL,CAAWG,IAAX,GAAgB,EAAhB,GAAmBD,WAF/C,EAGES,GAHF,CAGMC,IAAI,IACP,oBAAC,QAAD;AACE,MAAA,SAAS,EAAEc,OAAO,CAACK,QADrB;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,GAAG,EAAEnB,IAAI,CAACC,EAHZ;AAIE,MAAA,QAAQ,EAAEZ,aAAa,CAACgB,OAAd,CAAsBL,IAAI,CAACC,EAA3B,MAAmC,CAAC,CAJhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEa,OAAO,CAACM,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEN,OAAO,CAACO,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAEhC,aAAa,CAACgB,OAAd,CAAsBL,IAAI,CAACC,EAA3B,MAAmC,CAAC,CAD/C;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,QAAQ,EAAEN,KAAK,IACb,KAAKQ,eAAL,CAAqBR,KAArB,EAA4BK,IAAI,CAACC,EAAjC,CAJJ;AAME,MAAA,KAAK,EAAC,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAEa,OAAO,CAACQ,MADrB;AAEE,MAAA,GAAG,EAAEtB,IAAI,CAACuB,IAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGxC,WAAW,CAACiB,IAAI,CAACwB,SAAN,CAJd,CATF,EAeE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,SAAS,EAAEV,OAAO,CAACW,QADrB;AAEE,MAAA,OAAO,EAAC,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGzB,IAAI,CAACwB,SAJR,OAIoBxB,IAAI,CAAC0B,QAJzB,CADF,CAfF,CADF,CANF,EAgCE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEZ,OAAO,CAACM,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGpB,IAAI,CAACC,EADR,CAhCF,EAmCE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEa,OAAO,CAACM,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjD,MAAM,CAAC6B,IAAI,CAAC2B,GAAN,CAAN,CAAiBC,MAAjB,CAAwB,YAAxB,CADH,CAnCF,EAsCE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEd,OAAO,CAACM,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGpB,IAAI,CAAC6B,MADR,CAtCF,CAJH,CADH,CApBF,CADF,CADF,EAyEE,oBAAC,eAAD;AACE,MAAA,mBAAmB,EAAE;AACnB,sBAAc;AADK,OADvB;AAIE,MAAA,SAAS,EAAC,KAJZ;AAKE,MAAA,KAAK,EAAErC,KAAK,CAACiB,MALf;AAME,MAAA,mBAAmB,EAAE;AACnB,sBAAc;AADK,OANvB;AASE,MAAA,YAAY,EAAE,KAAKC,gBATrB;AAUE,MAAA,mBAAmB,EAAE,KAAKC,uBAV5B;AAWE,MAAA,IAAI,EAAEpB,IAXR;AAYE,MAAA,WAAW,EAAED,WAZf;AAaE,MAAA,kBAAkB,EAAE,EAbtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzEF,CADF,CADF;AA6FD;;AA7JgC;;AAkKnCH,UAAU,CAAC2C,SAAX,GAAuB;AACrBf,EAAAA,SAAS,EAAE7C,SAAS,CAAC6D,MADA;AAErBjB,EAAAA,OAAO,EAAE5C,SAAS,CAAC8D,MAAV,CAAiBC,UAFL;AAGrBrC,EAAAA,QAAQ,EAAE1B,SAAS,CAACgE,IAHC;AAIrBC,EAAAA,aAAa,EAAEjE,SAAS,CAACgE,IAJJ;AAKrB1C,EAAAA,KAAK,EAAEtB,SAAS,CAACkE,KAAV,CAAgBH;AALF,CAAvB;AAQA9C,UAAU,CAACkD,YAAX,GAA0B;AACxB7C,EAAAA,KAAK,EAAE,EADiB;AAExBI,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFM;AAGxBuC,EAAAA,aAAa,EAAE,MAAM,CAAE;AAHC,CAA1B;AAMA,eAAe9D,UAAU,CAACa,MAAD,CAAV,CAAmBC,UAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Externals\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core';\n\n// Material components\nimport {\n  Avatar,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n  TablePagination\n} from '@material-ui/core';\n\n// Shared helpers\nimport { getInitials } from 'helpers';\n\n// Shared components\nimport { Portlet, PortletContent } from 'components';\n\n// Component styles\nimport styles from './styles';\n\nclass UsersTable extends Component {\n  state = {\n    selectedUsers: [],\n    rowsPerPage: 10,\n    page: 0,\n    users: this.props.users\n  };\n\n  handleSelectAll = event => {\n    const { users} = this.state.users;\n    const {  onSelect } = this.props;\n\n    let selectedUsers;\n\n    if (event.target.checked) {\n      selectedUsers = users.map(user => user.id);\n    } else {\n      selectedUsers = [];\n    }\n\n    this.setState({ selectedUsers });\n\n    onSelect(selectedUsers);\n  };\n\n  handleSelectOne = (event, id) => {\n    const { onSelect } = this.props;\n    const { selectedUsers } = this.state;\n\n    const selectedIndex = selectedUsers.indexOf(id);\n    let newSelectedUsers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\n    } else if (selectedIndex === selectedUsers.length - 1) {\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedUsers = newSelectedUsers.concat(\n        selectedUsers.slice(0, selectedIndex),\n        selectedUsers.slice(selectedIndex + 1)\n      );\n    }\n\n    this.setState({ selectedUsers: newSelectedUsers });\n\n    onSelect(newSelectedUsers);\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  render() {\n    const { classes, className } = this.props;\n    const { activeTab, selectedUsers, rowsPerPage, page, users } = this.state;\n\n    const rootClassName = classNames(classes.root, className);\n\n    return (\n      <Portlet className={rootClassName}>\n        <PortletContent noPadding>\n          <PerfectScrollbar>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"left\">\n                    <Checkbox\n                      checked={selectedUsers.length === users.length}\n                      color=\"primary\"\n                      indeterminate={\n                        selectedUsers.length > 0 &&\n                        selectedUsers.length < users.length\n                      }\n                      onChange={this.handleSelectAll}\n                    />\n                    Name\n                  </TableCell>\n                  <TableCell align=\"left\">ID</TableCell>\n                  <TableCell align=\"left\">DOB</TableCell>\n                  <TableCell align=\"left\">Gender</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users\n\n                  .slice(this.state.page*10, this.state.page*10+rowsPerPage)\n                  .map(user => (\n                    <TableRow\n                      className={classes.tableRow}\n                      hover\n                      key={user.id}\n                      selected={selectedUsers.indexOf(user.id) !== -1}\n                    >\n                      <TableCell className={classes.tableCell}>\n                        <div className={classes.tableCellInner}>\n                          <Checkbox\n                            checked={selectedUsers.indexOf(user.id) !== -1}\n                            color=\"primary\"\n                            onChange={event =>\n                              this.handleSelectOne(event, user.id)\n                            }\n                            value=\"true\"\n                          />\n                          <Avatar\n                            className={classes.avatar}\n                            src={user.icon}\n                          >\n                            {getInitials(user.firstname)}\n                          </Avatar>\n                          <Link to=\"#\">\n                            <Typography\n                              className={classes.nameText}\n                              variant=\"body1\"\n                            >\n                              {user.firstname} {user.lastname}\n                            </Typography>\n                          </Link>\n                        </div>\n                      </TableCell>\n                      <TableCell className={classes.tableCell}>\n                        {user.id}\n                      </TableCell>\n                      <TableCell className={classes.tableCell}>\n                        {moment(user.dob).format('DD/MM/YYYY')}\n                      </TableCell>\n                      <TableCell className={classes.tableCell}>\n                        {user.gender}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n              </TableBody>\n            </Table>\n          </PerfectScrollbar>\n          <TablePagination\n            backIconButtonProps={{\n              'aria-label': 'Previous Page'\n            }}\n            component=\"div\"\n            count={users.length}\n            nextIconButtonProps={{\n              'aria-label': 'Next Page'\n            }}\n            onChangePage={this.handleChangePage}\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[]}\n          />\n        </PortletContent>\n      </Portlet>\n    );\n  }\n\n\n}\n\nUsersTable.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  onSelect: PropTypes.func,\n  onShowDetails: PropTypes.func,\n  users: PropTypes.array.isRequired\n};\n\nUsersTable.defaultProps = {\n  users: [],\n  onSelect: () => {},\n  onShowDetails: () => {}\n};\n\nexport default withStyles(styles)(UsersTable);\n"]},"metadata":{},"sourceType":"module"}