{"ast":null,"code":"import _objectSpread from \"/Users/macuser/Documents/Bloc/capstone__/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/macuser/Documents/Bloc/capstone__/client/src/views/SignIn/index.jsx\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom'; // Externals\n\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport validate from 'validate.js';\nimport _ from 'underscore'; // Material helpers\n\nimport { withStyles } from '@material-ui/core'; // Material components\n\nimport { Grid, Button, IconButton, CircularProgress, TextField, Typography } from '@material-ui/core'; // Material icons\n\nimport { ArrowBack as ArrowBackIcon } from '@material-ui/icons'; // Shared components\n\nimport { Facebook as FacebookIcon, Google as GoogleIcon } from 'icons'; // Component styles\n\nimport styles from './styles'; // Form validation schema\n\nimport schema from './schema'; // Service methods\n\nconst signIn = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(true);\n    }, 1500);\n  });\n};\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      values: {\n        email: '',\n        password: ''\n      },\n      touched: {\n        email: false,\n        password: false\n      },\n      errors: {\n        email: null,\n        password: null\n      },\n      isValid: false,\n      isLoading: false,\n      submitError: null\n    };\n\n    this.handleBack = () => {\n      const history = this.props.history;\n      history.goBack();\n    };\n\n    this.validateForm = _.debounce(() => {\n      const values = this.state.values;\n\n      const newState = _objectSpread({}, this.state);\n\n      const errors = validate(values, schema);\n      newState.errors = errors || {};\n      newState.isValid = errors ? false : true;\n      this.setState(newState);\n    }, 300);\n\n    this.handleFieldChange = (field, value) => {\n      const newState = _objectSpread({}, this.state);\n\n      newState.submitError = null;\n      newState.touched[field] = true;\n      newState.values[field] = value;\n      this.setState(newState, this.validateForm);\n    };\n\n    this.handleSignIn = async () => {\n      try {\n        const history = this.props.history;\n        const values = this.state.values;\n        this.setState({\n          isLoading: true\n        });\n        await signIn(values.email, values.password);\n        localStorage.setItem('isAuthenticated', true);\n        history.push('/dashboard');\n      } catch (error) {\n        this.setState({\n          isLoading: false,\n          serviceError: error\n        });\n      }\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          values = _this$state.values,\n          touched = _this$state.touched,\n          errors = _this$state.errors,\n          isValid = _this$state.isValid,\n          submitError = _this$state.submitError,\n          isLoading = _this$state.isLoading;\n    const showEmailError = touched.email && errors.email;\n    const showPasswordError = touched.password && errors.password;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: classes.grid,\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: classes.quoteWrapper,\n      item: true,\n      lg: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.quote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.quoteInner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.quoteText,\n      variant: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Hella narwhal Cosby sweater McSweeney's, salvia kitsch before they sold out High Life.\"), React.createElement(\"div\", {\n      className: classes.person,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.name,\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Takamaru Ayako\"), React.createElement(Typography, {\n      className: classes.bio,\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Manager at inVision\"))))), React.createElement(Grid, {\n      className: classes.content,\n      item: true,\n      lg: 7,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.contentHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: classes.backButton,\n      onClick: this.handleBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(ArrowBackIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: classes.contentBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Sign in\"), React.createElement(Typography, {\n      className: classes.subtitle,\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Sign in with social media\"), React.createElement(Button, {\n      className: classes.facebookButton,\n      color: \"primary\",\n      onClick: this.handleSignIn,\n      size: \"large\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(FacebookIcon, {\n      className: classes.facebookIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), \"Login with Facebook\"), React.createElement(Button, {\n      className: classes.googleButton,\n      onClick: this.handleSignIn,\n      size: \"large\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(GoogleIcon, {\n      className: classes.googleIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), \"Login with Google\"), React.createElement(Typography, {\n      className: classes.sugestion,\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"or login with email address\"), React.createElement(\"div\", {\n      className: classes.fields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Email address\",\n      name: \"email\",\n      onChange: event => this.handleFieldChange('email', event.target.value),\n      type: \"text\",\n      value: values.email,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), showEmailError && React.createElement(Typography, {\n      className: classes.fieldError,\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, errors.email[0]), React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Password\",\n      name: \"password\",\n      onChange: event => this.handleFieldChange('password', event.target.value),\n      type: \"password\",\n      value: values.password,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), showPasswordError && React.createElement(Typography, {\n      className: classes.fieldError,\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, errors.password[0])), submitError && React.createElement(Typography, {\n      className: classes.submitError,\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, submitError), isLoading ? React.createElement(CircularProgress, {\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }) : React.createElement(Button, {\n      className: classes.signInButton,\n      color: \"primary\",\n      disabled: !isValid,\n      onClick: this.handleSignIn,\n      size: \"large\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Sign in now\"), React.createElement(Typography, {\n      className: classes.signUp,\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Don't have an account?\", ' ', React.createElement(Link, {\n      className: classes.signUpUrl,\n      to: \"/sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Sign up\"))))))));\n  }\n\n}\n\nSignIn.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\nexport default compose(withRouter, withStyles(styles))(SignIn);","map":{"version":3,"sources":["/Users/macuser/Documents/Bloc/capstone__/client/src/views/SignIn/index.jsx"],"names":["React","Component","Link","withRouter","PropTypes","compose","validate","_","withStyles","Grid","Button","IconButton","CircularProgress","TextField","Typography","ArrowBack","ArrowBackIcon","Facebook","FacebookIcon","Google","GoogleIcon","styles","schema","signIn","Promise","resolve","setTimeout","SignIn","state","values","email","password","touched","errors","isValid","isLoading","submitError","handleBack","history","props","goBack","validateForm","debounce","newState","setState","handleFieldChange","field","value","handleSignIn","localStorage","setItem","push","error","serviceError","render","classes","showEmailError","showPasswordError","root","grid","quoteWrapper","quote","quoteInner","quoteText","person","name","bio","content","contentHeader","backButton","contentBody","form","title","subtitle","facebookButton","facebookIcon","googleButton","googleIcon","sugestion","fields","textField","event","target","fieldError","progress","signInButton","signUp","signUpUrl","propTypes","className","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\n// Externals\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport validate from 'validate.js';\nimport _ from 'underscore';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core';\n\n// Material components\nimport {\n  Grid,\n  Button,\n  IconButton,\n  CircularProgress,\n  TextField,\n  Typography\n} from '@material-ui/core';\n\n// Material icons\nimport { ArrowBack as ArrowBackIcon } from '@material-ui/icons';\n\n// Shared components\nimport { Facebook as FacebookIcon, Google as GoogleIcon } from 'icons';\n\n// Component styles\nimport styles from './styles';\n\n// Form validation schema\nimport schema from './schema';\n\n// Service methods\nconst signIn = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(true);\n    }, 1500);\n  });\n};\n\nclass SignIn extends Component {\n  state = {\n    values: {\n      email: '',\n      password: ''\n    },\n    touched: {\n      email: false,\n      password: false\n    },\n    errors: {\n      email: null,\n      password: null\n    },\n    isValid: false,\n    isLoading: false,\n    submitError: null\n  };\n\n  handleBack = () => {\n    const { history } = this.props;\n\n    history.goBack();\n  };\n\n  validateForm = _.debounce(() => {\n    const { values } = this.state;\n\n    const newState = { ...this.state };\n    const errors = validate(values, schema);\n\n    newState.errors = errors || {};\n    newState.isValid = errors ? false : true;\n\n    this.setState(newState);\n  }, 300);\n\n  handleFieldChange = (field, value) => {\n    const newState = { ...this.state };\n\n    newState.submitError = null;\n    newState.touched[field] = true;\n    newState.values[field] = value;\n\n    this.setState(newState, this.validateForm);\n  };\n\n  handleSignIn = async () => {\n    try {\n      const { history } = this.props;\n      const { values } = this.state;\n\n      this.setState({ isLoading: true });\n\n      await signIn(values.email, values.password);\n\n      localStorage.setItem('isAuthenticated', true);\n\n      history.push('/dashboard');\n    } catch (error) {\n      this.setState({\n        isLoading: false,\n        serviceError: error\n      });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      values,\n      touched,\n      errors,\n      isValid,\n      submitError,\n      isLoading\n    } = this.state;\n\n    const showEmailError = touched.email && errors.email;\n    const showPasswordError = touched.password && errors.password;\n\n    return (\n      <div className={classes.root}>\n        <Grid\n          className={classes.grid}\n          container\n        >\n          <Grid\n            className={classes.quoteWrapper}\n            item\n            lg={5}\n          >\n            <div className={classes.quote}>\n              <div className={classes.quoteInner}>\n                <Typography\n                  className={classes.quoteText}\n                  variant=\"h1\"\n                >\n                  Hella narwhal Cosby sweater McSweeney's, salvia kitsch before\n                  they sold out High Life.\n                </Typography>\n                <div className={classes.person}>\n                  <Typography\n                    className={classes.name}\n                    variant=\"body1\"\n                  >\n                    Takamaru Ayako\n                  </Typography>\n                  <Typography\n                    className={classes.bio}\n                    variant=\"body2\"\n                  >\n                    Manager at inVision\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </Grid>\n          <Grid\n            className={classes.content}\n            item\n            lg={7}\n            xs={12}\n          >\n            <div className={classes.content}>\n              <div className={classes.contentHeader}>\n                <IconButton\n                  className={classes.backButton}\n                  onClick={this.handleBack}\n                >\n                  <ArrowBackIcon />\n                </IconButton>\n              </div>\n              <div className={classes.contentBody}>\n                <form className={classes.form}>\n                  <Typography\n                    className={classes.title}\n                    variant=\"h2\"\n                  >\n                    Sign in\n                  </Typography>\n                  <Typography\n                    className={classes.subtitle}\n                    variant=\"body1\"\n                  >\n                    Sign in with social media\n                  </Typography>\n                  <Button\n                    className={classes.facebookButton}\n                    color=\"primary\"\n                    onClick={this.handleSignIn}\n                    size=\"large\"\n                    variant=\"contained\"\n                  >\n                    <FacebookIcon className={classes.facebookIcon} />\n                    Login with Facebook\n                  </Button>\n                  <Button\n                    className={classes.googleButton}\n                    onClick={this.handleSignIn}\n                    size=\"large\"\n                    variant=\"contained\"\n                  >\n                    <GoogleIcon className={classes.googleIcon} />\n                    Login with Google\n                  </Button>\n                  <Typography\n                    className={classes.sugestion}\n                    variant=\"body1\"\n                  >\n                    or login with email address\n                  </Typography>\n                  <div className={classes.fields}>\n                    <TextField\n                      className={classes.textField}\n                      label=\"Email address\"\n                      name=\"email\"\n                      onChange={event =>\n                        this.handleFieldChange('email', event.target.value)\n                      }\n                      type=\"text\"\n                      value={values.email}\n                      variant=\"outlined\"\n                    />\n                    {showEmailError && (\n                      <Typography\n                        className={classes.fieldError}\n                        variant=\"body2\"\n                      >\n                        {errors.email[0]}\n                      </Typography>\n                    )}\n                    <TextField\n                      className={classes.textField}\n                      label=\"Password\"\n                      name=\"password\"\n                      onChange={event =>\n                        this.handleFieldChange('password', event.target.value)\n                      }\n                      type=\"password\"\n                      value={values.password}\n                      variant=\"outlined\"\n                    />\n                    {showPasswordError && (\n                      <Typography\n                        className={classes.fieldError}\n                        variant=\"body2\"\n                      >\n                        {errors.password[0]}\n                      </Typography>\n                    )}\n                  </div>\n                  {submitError && (\n                    <Typography\n                      className={classes.submitError}\n                      variant=\"body2\"\n                    >\n                      {submitError}\n                    </Typography>\n                  )}\n                  {isLoading ? (\n                    <CircularProgress className={classes.progress} />\n                  ) : (\n                    <Button\n                      className={classes.signInButton}\n                      color=\"primary\"\n                      disabled={!isValid}\n                      onClick={this.handleSignIn}\n                      size=\"large\"\n                      variant=\"contained\"\n                    >\n                      Sign in now\n                    </Button>\n                  )}\n                  <Typography\n                    className={classes.signUp}\n                    variant=\"body1\"\n                  >\n                    Don't have an account?{' '}\n                    <Link\n                      className={classes.signUpUrl}\n                      to=\"/sign-up\"\n                    >\n                      Sign up\n                    </Link>\n                  </Typography>\n                </form>\n              </div>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nSignIn.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nexport default compose(\n  withRouter,\n  withStyles(styles)\n)(SignIn);\n"]},"metadata":{},"sourceType":"module"}