{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/Bloc/capstone__/client/src/views/UserList/index.jsx\";\nimport React, { Component } from 'react'; // Externals\n\nimport PropTypes from 'prop-types'; // Material helpers\n\nimport { withStyles } from '@material-ui/core'; // Material components\n\nimport { CircularProgress, Typography } from '@material-ui/core'; // Shared layouts\n\nimport { Dashboard as DashboardLayout } from 'layouts'; // Shared services\n\nimport { getUsers } from 'services/user'; // Custom components\n\nimport { UsersToolbar, UsersTable } from './components'; // Component styles\n\nimport styles from './style';\n\nclass UserList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.signal = true;\n    this.state = {\n      isLoading: false,\n      limit: 40,\n      users: [],\n      selectedUsers: [],\n      searchedUsers: [],\n      error: null\n    };\n\n    this.handleSelect = selectedUsers => {\n      this.setState({\n        selectedUsers\n      });\n    };\n  }\n\n  //\n  // async getUsers() {\n  //   try {\n  //     this.setState({ isLoading: true });\n  //\n  //     const { limit } = this.state;\n  //\n  //     const { users } = await getUsers(limit);\n  //\n  //     if (this.signal) {\n  //       this.setState({\n  //         isLoading: false,\n  //         users\n  //       });\n  //     }\n  //   } catch (error) {\n  //     if (this.signal) {\n  //       this.setState({\n  //         isLoading: false,\n  //         error\n  //       });\n  //     }\n  //   }\n  // }\n  componentDidMount() {\n    this.signal = true; //this.getUsers();\n    //this.setState({ isLoading: true });\n    //console.log(this.state.limit);\n\n    this.setState({\n      isLoading: true\n    });\n    this.getPatients(0, this.state.limit).then(res => {\n      this.setState({\n        users: res\n      });\n      console.log(res);\n      this.setState({\n        isLoading: false\n      });\n    }).catch(err => {\n      console.log(err);\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  async getPatients(begin, limit) {\n    const response = await fetch('/getPatients/' + begin + '/' + limit);\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n\n    return body;\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      //console.log('do validate');\n      let value = e.target.value;\n      console.log(value);\n      fetch('/getPatients/' + value).then(response => {\n        //console.log(response.json());\n        //this.setState({users: [{firstname: \"test\", lastname: \"test\", dob: '2019-05-20', gender:'female'}]});\n        //this.forceUpdate();\n        console.log(this.state.users);\n      }).catch(err => {\n        return err;\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.signal = false;\n  }\n\n  renderUsers() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          error = _this$state.error,\n          users = _this$state.users; //let users = this.state.searchedUsers.length == 0 ? this.state.users : this.state.searchedUsers;\n    //console.log(users);\n\n    if (isLoading) {\n      return React.createElement(\"div\", {\n        className: classes.progressWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(CircularProgress, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }));\n    }\n\n    if (error) {\n      return React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, error);\n    }\n\n    if (users.length === 0) {\n      return React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"There are no users\");\n    }\n\n    return React.createElement(UsersTable //\n    , {\n      onSelect: this.handleSelect,\n      users: users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const selectedUsers = this.state.selectedUsers;\n    return React.createElement(DashboardLayout, {\n      title: \"Patients\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(UsersToolbar, {\n      selectedUsers: selectedUsers,\n      handleKeyDown: this.handleKeyDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.renderUsers())));\n  }\n\n}\n\nUserList.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(UserList);","map":{"version":3,"sources":["/Users/macuser/Documents/Bloc/capstone__/client/src/views/UserList/index.jsx"],"names":["React","Component","PropTypes","withStyles","CircularProgress","Typography","Dashboard","DashboardLayout","getUsers","UsersToolbar","UsersTable","styles","UserList","signal","state","isLoading","limit","users","selectedUsers","searchedUsers","error","handleSelect","setState","componentDidMount","getPatients","then","res","console","log","catch","err","begin","response","fetch","body","json","status","Error","message","handleKeyDown","e","key","value","target","componentWillUnmount","renderUsers","classes","props","progressWrapper","length","render","root","content","propTypes","className","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n// Externals\nimport PropTypes from 'prop-types';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core';\n\n// Material components\nimport { CircularProgress, Typography } from '@material-ui/core';\n\n// Shared layouts\nimport { Dashboard as DashboardLayout } from 'layouts';\n\n// Shared services\nimport { getUsers } from 'services/user';\n\n// Custom components\nimport { UsersToolbar, UsersTable } from './components';\n\n// Component styles\nimport styles from './style';\n\nclass UserList extends Component {\n  signal = true;\n\n  state = {\n    isLoading: false,\n    limit: 40,\n    users: [],\n    selectedUsers: [],\n    searchedUsers: [],\n    error: null\n  };\n  //\n  // async getUsers() {\n  //   try {\n  //     this.setState({ isLoading: true });\n  //\n  //     const { limit } = this.state;\n  //\n  //     const { users } = await getUsers(limit);\n  //\n  //     if (this.signal) {\n  //       this.setState({\n  //         isLoading: false,\n  //         users\n  //       });\n  //     }\n  //   } catch (error) {\n  //     if (this.signal) {\n  //       this.setState({\n  //         isLoading: false,\n  //         error\n  //       });\n  //     }\n  //   }\n  // }\n\n\n  componentDidMount() {\n    this.signal = true;\n    //this.getUsers();\n\n    //this.setState({ isLoading: true });\n    //console.log(this.state.limit);\n    this.setState({ isLoading: true });\n    this.getPatients(0,this.state.limit)\n      .then((res) => {\n        this.setState({ users: res});\n        console.log(res);\n        this.setState({ isLoading: false});\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({ isLoading: false });\n      });\n\n  }\n\n  async getPatients (begin, limit){\n    const response = await fetch('/getPatients/' + begin + '/'+ limit );\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n    return body;\n  };\n\n  handleKeyDown(e) {\n    if (e.key === 'Enter') {\n      //console.log('do validate');\n      let value = e.target.value;\n      console.log(value);\n\n      fetch('/getPatients/' + value )\n      .then((response) =>{\n        //console.log(response.json());\n        //this.setState({users: [{firstname: \"test\", lastname: \"test\", dob: '2019-05-20', gender:'female'}]});\n        //this.forceUpdate();\n        console.log(this.state.users);\n      })\n      .catch((err) => {\n        return err;\n      });\n    }\n  };\n\n  componentWillUnmount() {\n    this.signal = false;\n  }\n\n  handleSelect = selectedUsers => {\n    this.setState({ selectedUsers });\n  };\n\n  renderUsers() {\n    const { classes } = this.props;\n    const { isLoading, error, users } = this.state;\n\n    //let users = this.state.searchedUsers.length == 0 ? this.state.users : this.state.searchedUsers;\n    //console.log(users);\n\n    if (isLoading) {\n      return (\n        <div className={classes.progressWrapper}>\n          <CircularProgress />\n        </div>\n      );\n    }\n\n    if (error) {\n      return <Typography variant=\"h6\">{error}</Typography>;\n    }\n\n    if (users.length === 0) {\n      return <Typography variant=\"h6\">There are no users</Typography>;\n    }\n\n\n\n    return (\n      <UsersTable\n        //\n        onSelect={this.handleSelect}\n        users= {users}\n      />\n    );\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { selectedUsers } = this.state;\n\n    return (\n      <DashboardLayout title=\"Patients\">\n        <div className={classes.root}>\n          <UsersToolbar selectedUsers={selectedUsers} handleKeyDown={this.handleKeyDown} />\n          <div className={classes.content}>{this.renderUsers()}</div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n}\n\nUserList.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(UserList);\n"]},"metadata":{},"sourceType":"module"}