{"ast":null,"code":"import _objectSpread from \"/Users/macuser/Documents/Bloc/capstone__/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/macuser/Documents/Bloc/capstone__/client/src/views/SignUp/index.jsx\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom'; // Externals\n\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport validate from 'validate.js';\nimport _ from 'underscore'; // Material helpers\n\nimport { withStyles } from '@material-ui/core'; // Material components\n\nimport { Button, Checkbox, CircularProgress, Grid, IconButton, TextField, Typography } from '@material-ui/core'; // Material icons\n\nimport { ArrowBack as ArrowBackIcon } from '@material-ui/icons'; // Shared utilities\n\nimport validators from 'common/validators'; // Component styles\n\nimport styles from './styles'; // Form validation schema\n\nimport schema from './schema';\nvalidate.validators.checked = validators.checked; // Service methods\n\nconst signUp = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(true);\n    }, 1500);\n  });\n};\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      values: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        policy: false\n      },\n      touched: {\n        firstName: false,\n        lastName: false,\n        email: false,\n        password: false,\n        policy: null\n      },\n      errors: {\n        firstName: null,\n        lastName: null,\n        email: null,\n        password: null,\n        policy: null\n      },\n      isValid: false,\n      isLoading: false,\n      submitError: null\n    };\n\n    this.handleBack = () => {\n      const history = this.props.history;\n      history.goBack();\n    };\n\n    this.validateForm = _.debounce(() => {\n      const values = this.state.values;\n\n      const newState = _objectSpread({}, this.state);\n\n      const errors = validate(values, schema);\n      newState.errors = errors || {};\n      newState.isValid = errors ? false : true;\n      this.setState(newState);\n    }, 300);\n\n    this.handleFieldChange = (field, value) => {\n      const newState = _objectSpread({}, this.state);\n\n      newState.submitError = null;\n      newState.touched[field] = true;\n      newState.values[field] = value;\n      this.setState(newState, this.validateForm);\n    };\n\n    this.handleSignUp = async () => {\n      try {\n        const history = this.props.history;\n        const values = this.state.values;\n        this.setState({\n          isLoading: true\n        });\n        await signUp({\n          firstName: values.firstName,\n          lastName: values.lastName,\n          email: values.email,\n          password: values.password\n        });\n        history.push('/sign-in');\n      } catch (error) {\n        this.setState({\n          isLoading: false,\n          serviceError: error\n        });\n      }\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          values = _this$state.values,\n          touched = _this$state.touched,\n          errors = _this$state.errors,\n          isValid = _this$state.isValid,\n          submitError = _this$state.submitError,\n          isLoading = _this$state.isLoading;\n    const showFirstNameError = touched.firstName && errors.firstName ? errors.firstName[0] : false;\n    const showLastNameError = touched.lastName && errors.lastName ? errors.lastName[0] : false;\n    const showEmailError = touched.email && errors.email ? errors.email[0] : false;\n    const showPasswordError = touched.password && errors.password ? errors.password[0] : false;\n    const showPolicyError = touched.policy && errors.policy ? errors.policy[0] : false;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: classes.grid,\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: classes.quoteWrapper,\n      item: true,\n      lg: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.quote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.quoteInner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.quoteText,\n      variant: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Hella narwhal Cosby sweater McSweeney's, salvia kitsch before they sold out High Life.\"), React.createElement(\"div\", {\n      className: classes.person,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.name,\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Takamaru Ayako\"), React.createElement(Typography, {\n      className: classes.bio,\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Manager at inVision\"))))), React.createElement(Grid, {\n      className: classes.content,\n      item: true,\n      lg: 7,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.contentHeader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: classes.backButton,\n      onClick: this.handleBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(ArrowBackIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: classes.contentBody,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.form,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.title,\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Create new account\"), React.createElement(Typography, {\n      className: classes.subtitle,\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Use your work email to create new account... it's free.\"), React.createElement(\"div\", {\n      className: classes.fields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      className: classes.textField,\n      label: \"First name\",\n      name: \"firstName\",\n      onChange: event => this.handleFieldChange('firstName', event.target.value),\n      value: values.firstName,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), showFirstNameError && React.createElement(Typography, {\n      className: classes.fieldError,\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, errors.firstName[0]), React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Last name\",\n      onChange: event => this.handleFieldChange('lastName', event.target.value),\n      value: values.lastName,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), showLastNameError && React.createElement(Typography, {\n      className: classes.fieldError,\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, errors.lastName[0]), React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Email address\",\n      name: \"email\",\n      onChange: event => this.handleFieldChange('email', event.target.value),\n      value: values.email,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), showEmailError && React.createElement(Typography, {\n      className: classes.fieldError,\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, errors.email[0]), React.createElement(TextField, {\n      className: classes.textField,\n      label: \"Password\",\n      onChange: event => this.handleFieldChange('password', event.target.value),\n      type: \"password\",\n      value: values.password,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), showPasswordError && React.createElement(Typography, {\n      className: classes.fieldError,\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, errors.password[0]), React.createElement(\"div\", {\n      className: classes.policy,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: values.policy,\n      className: classes.policyCheckbox,\n      color: \"primary\",\n      name: \"policy\",\n      onChange: () => this.handleFieldChange('policy', !values.policy),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      className: classes.policyText,\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"I have read the \\xA0\", React.createElement(Link, {\n      className: classes.policyUrl,\n      to: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Terms and Conditions\"), \".\")), showPolicyError && React.createElement(Typography, {\n      className: classes.fieldError,\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, errors.policy[0])), submitError && React.createElement(Typography, {\n      className: classes.submitError,\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, submitError), isLoading ? React.createElement(CircularProgress, {\n      className: classes.progress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }) : React.createElement(Button, {\n      className: classes.signUpButton,\n      color: \"primary\",\n      disabled: !isValid,\n      onClick: this.handleSignUp,\n      size: \"large\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Sign up now\"), React.createElement(Typography, {\n      className: classes.signIn,\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Have an account?\", ' ', React.createElement(Link, {\n      className: classes.signInUrl,\n      to: \"/sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"Sign In\"))))))));\n  }\n\n}\n\nSignUp.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\nexport default compose(withRouter, withStyles(styles))(SignUp);","map":{"version":3,"sources":["/Users/macuser/Documents/Bloc/capstone__/client/src/views/SignUp/index.jsx"],"names":["React","Component","Link","withRouter","PropTypes","compose","validate","_","withStyles","Button","Checkbox","CircularProgress","Grid","IconButton","TextField","Typography","ArrowBack","ArrowBackIcon","validators","styles","schema","checked","signUp","Promise","resolve","setTimeout","SignUp","state","values","firstName","lastName","email","password","policy","touched","errors","isValid","isLoading","submitError","handleBack","history","props","goBack","validateForm","debounce","newState","setState","handleFieldChange","field","value","handleSignUp","push","error","serviceError","render","classes","showFirstNameError","showLastNameError","showEmailError","showPasswordError","showPolicyError","root","grid","quoteWrapper","quote","quoteInner","quoteText","person","name","bio","content","contentHeader","backButton","contentBody","form","title","subtitle","fields","textField","event","target","fieldError","policyCheckbox","policyText","policyUrl","progress","signUpButton","signIn","signInUrl","propTypes","className","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\n// Externals\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport validate from 'validate.js';\nimport _ from 'underscore';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core';\n\n// Material components\nimport {\n  Button,\n  Checkbox,\n  CircularProgress,\n  Grid,\n  IconButton,\n  TextField,\n  Typography\n} from '@material-ui/core';\n\n// Material icons\nimport { ArrowBack as ArrowBackIcon } from '@material-ui/icons';\n\n// Shared utilities\nimport validators from 'common/validators';\n\n// Component styles\nimport styles from './styles';\n\n// Form validation schema\nimport schema from './schema';\n\nvalidate.validators.checked = validators.checked;\n\n// Service methods\nconst signUp = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(true);\n    }, 1500);\n  });\n};\n\nclass SignUp extends Component {\n  state = {\n    values: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      policy: false\n    },\n    touched: {\n      firstName: false,\n      lastName: false,\n      email: false,\n      password: false,\n      policy: null\n    },\n    errors: {\n      firstName: null,\n      lastName: null,\n      email: null,\n      password: null,\n      policy: null\n    },\n    isValid: false,\n    isLoading: false,\n    submitError: null\n  };\n\n  handleBack = () => {\n    const { history } = this.props;\n\n    history.goBack();\n  };\n\n  validateForm = _.debounce(() => {\n    const { values } = this.state;\n\n    const newState = { ...this.state };\n    const errors = validate(values, schema);\n\n    newState.errors = errors || {};\n    newState.isValid = errors ? false : true;\n\n    this.setState(newState);\n  }, 300);\n\n  handleFieldChange = (field, value) => {\n    const newState = { ...this.state };\n\n    newState.submitError = null;\n    newState.touched[field] = true;\n    newState.values[field] = value;\n\n    this.setState(newState, this.validateForm);\n  };\n\n  handleSignUp = async () => {\n    try {\n      const { history } = this.props;\n      const { values } = this.state;\n\n      this.setState({ isLoading: true });\n\n      await signUp({\n        firstName: values.firstName,\n        lastName: values.lastName,\n        email: values.email,\n        password: values.password\n      });\n\n      history.push('/sign-in');\n    } catch (error) {\n      this.setState({\n        isLoading: false,\n        serviceError: error\n      });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      values,\n      touched,\n      errors,\n      isValid,\n      submitError,\n      isLoading\n    } = this.state;\n\n    const showFirstNameError =\n      touched.firstName && errors.firstName ? errors.firstName[0] : false;\n    const showLastNameError =\n      touched.lastName && errors.lastName ? errors.lastName[0] : false;\n    const showEmailError =\n      touched.email && errors.email ? errors.email[0] : false;\n    const showPasswordError =\n      touched.password && errors.password ? errors.password[0] : false;\n    const showPolicyError =\n      touched.policy && errors.policy ? errors.policy[0] : false;\n\n    return (\n      <div className={classes.root}>\n        <Grid\n          className={classes.grid}\n          container\n        >\n          <Grid\n            className={classes.quoteWrapper}\n            item\n            lg={5}\n          >\n            <div className={classes.quote}>\n              <div className={classes.quoteInner}>\n                <Typography\n                  className={classes.quoteText}\n                  variant=\"h1\"\n                >\n                  Hella narwhal Cosby sweater McSweeney's, salvia kitsch before\n                  they sold out High Life.\n                </Typography>\n                <div className={classes.person}>\n                  <Typography\n                    className={classes.name}\n                    variant=\"body1\"\n                  >\n                    Takamaru Ayako\n                  </Typography>\n                  <Typography\n                    className={classes.bio}\n                    variant=\"body2\"\n                  >\n                    Manager at inVision\n                  </Typography>\n                </div>\n              </div>\n            </div>\n          </Grid>\n          <Grid\n            className={classes.content}\n            item\n            lg={7}\n            xs={12}\n          >\n            <div className={classes.content}>\n              <div className={classes.contentHeader}>\n                <IconButton\n                  className={classes.backButton}\n                  onClick={this.handleBack}\n                >\n                  <ArrowBackIcon />\n                </IconButton>\n              </div>\n              <div className={classes.contentBody}>\n                <form className={classes.form}>\n                  <Typography\n                    className={classes.title}\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    className={classes.subtitle}\n                    variant=\"body1\"\n                  >\n                    Use your work email to create new account... it's free.\n                  </Typography>\n                  <div className={classes.fields}>\n                    <TextField\n                      className={classes.textField}\n                      label=\"First name\"\n                      name=\"firstName\"\n                      onChange={event =>\n                        this.handleFieldChange('firstName', event.target.value)\n                      }\n                      value={values.firstName}\n                      variant=\"outlined\"\n                    />\n                    {showFirstNameError && (\n                      <Typography\n                        className={classes.fieldError}\n                        variant=\"body2\"\n                      >\n                        {errors.firstName[0]}\n                      </Typography>\n                    )}\n                    <TextField\n                      className={classes.textField}\n                      label=\"Last name\"\n                      onChange={event =>\n                        this.handleFieldChange('lastName', event.target.value)\n                      }\n                      value={values.lastName}\n                      variant=\"outlined\"\n                    />\n                    {showLastNameError && (\n                      <Typography\n                        className={classes.fieldError}\n                        variant=\"body2\"\n                      >\n                        {errors.lastName[0]}\n                      </Typography>\n                    )}\n                    <TextField\n                      className={classes.textField}\n                      label=\"Email address\"\n                      name=\"email\"\n                      onChange={event =>\n                        this.handleFieldChange('email', event.target.value)\n                      }\n                      value={values.email}\n                      variant=\"outlined\"\n                    />\n                    {showEmailError && (\n                      <Typography\n                        className={classes.fieldError}\n                        variant=\"body2\"\n                      >\n                        {errors.email[0]}\n                      </Typography>\n                    )}\n                    <TextField\n                      className={classes.textField}\n                      label=\"Password\"\n                      onChange={event =>\n                        this.handleFieldChange('password', event.target.value)\n                      }\n                      type=\"password\"\n                      value={values.password}\n                      variant=\"outlined\"\n                    />\n                    {showPasswordError && (\n                      <Typography\n                        className={classes.fieldError}\n                        variant=\"body2\"\n                      >\n                        {errors.password[0]}\n                      </Typography>\n                    )}\n                    <div className={classes.policy}>\n                      <Checkbox\n                        checked={values.policy}\n                        className={classes.policyCheckbox}\n                        color=\"primary\"\n                        name=\"policy\"\n                        onChange={() =>\n                          this.handleFieldChange('policy', !values.policy)\n                        }\n                      />\n                      <Typography\n                        className={classes.policyText}\n                        variant=\"body1\"\n                      >\n                        I have read the &nbsp;\n                        <Link\n                          className={classes.policyUrl}\n                          to=\"#\"\n                        >\n                          Terms and Conditions\n                        </Link>\n                        .\n                      </Typography>\n                    </div>\n                    {showPolicyError && (\n                      <Typography\n                        className={classes.fieldError}\n                        variant=\"body2\"\n                      >\n                        {errors.policy[0]}\n                      </Typography>\n                    )}\n                  </div>\n                  {submitError && (\n                    <Typography\n                      className={classes.submitError}\n                      variant=\"body2\"\n                    >\n                      {submitError}\n                    </Typography>\n                  )}\n                  {isLoading ? (\n                    <CircularProgress className={classes.progress} />\n                  ) : (\n                    <Button\n                      className={classes.signUpButton}\n                      color=\"primary\"\n                      disabled={!isValid}\n                      onClick={this.handleSignUp}\n                      size=\"large\"\n                      variant=\"contained\"\n                    >\n                      Sign up now\n                    </Button>\n                  )}\n                  <Typography\n                    className={classes.signIn}\n                    variant=\"body1\"\n                  >\n                    Have an account?{' '}\n                    <Link\n                      className={classes.signInUrl}\n                      to=\"/sign-in\"\n                    >\n                      Sign In\n                    </Link>\n                  </Typography>\n                </form>\n              </div>\n            </div>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nSignUp.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n};\n\nexport default compose(\n  withRouter,\n  withStyles(styles)\n)(SignUp);\n"]},"metadata":{},"sourceType":"module"}