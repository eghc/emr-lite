{"ast":null,"code":"import _objectWithoutProperties from \"/Users/macuser/Documents/Bloc/capstone__/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/macuser/Documents/Bloc/capstone__/client/src/views/Dashboard/components/DevicesChart/index.jsx\";\nimport React, { Component } from 'react'; // Externals\n\nimport { Doughnut } from 'react-chartjs-2';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types'; // Material helpers\n\nimport { withStyles } from '@material-ui/core'; // Material components\n\nimport { IconButton, Typography } from '@material-ui/core'; // Material icons\n\nimport { LaptopMac as LaptopMacIcon, PhoneIphone as PhoneIphoneIcon, Refresh as RefreshIcon, TabletMac as TabletMacIcon } from '@material-ui/icons'; // Shared components\n\nimport { Portlet, PortletHeader, PortletLabel, PortletToolbar, PortletContent } from 'components'; // Palette\n\nimport palette from 'theme/palette'; // Chart configuration\n\nimport { data, options } from './chart'; // Component styles\n\nimport styles from './styles';\n\nclass DevicesChart extends Component {\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          className = _this$props.className,\n          rest = _objectWithoutProperties(_this$props, [\"classes\", \"className\"]);\n\n    const rootClassName = classNames(classes.root, className);\n    return React.createElement(Portlet, Object.assign({}, rest, {\n      className: rootClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(PortletHeader, {\n      noDivider: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(PortletLabel, {\n      title: \"Users by device\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(PortletToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: classes.refreshButton,\n      onClick: this.handleRefresh,\n      variant: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(RefreshIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })))), React.createElement(PortletContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.chartWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Doughnut, {\n      data: data,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.stats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.device,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(LaptopMacIcon, {\n      className: classes.deviceIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Desktop\"), React.createElement(Typography, {\n      style: {\n        color: palette.primary.main\n      },\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"63%\")), React.createElement(\"div\", {\n      className: classes.device,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(TabletMacIcon, {\n      className: classes.deviceIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Tablet\"), React.createElement(Typography, {\n      style: {\n        color: palette.danger.main\n      },\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"15%\")), React.createElement(\"div\", {\n      className: classes.device,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(PhoneIphoneIcon, {\n      className: classes.deviceIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Mobile\"), React.createElement(Typography, {\n      style: {\n        color: palette.warning.main\n      },\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"23%\")))));\n  }\n\n}\n\nDevicesChart.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(DevicesChart);","map":{"version":3,"sources":["/Users/macuser/Documents/Bloc/capstone__/client/src/views/Dashboard/components/DevicesChart/index.jsx"],"names":["React","Component","Doughnut","classNames","PropTypes","withStyles","IconButton","Typography","LaptopMac","LaptopMacIcon","PhoneIphone","PhoneIphoneIcon","Refresh","RefreshIcon","TabletMac","TabletMacIcon","Portlet","PortletHeader","PortletLabel","PortletToolbar","PortletContent","palette","data","options","styles","DevicesChart","render","props","classes","className","rest","rootClassName","root","refreshButton","handleRefresh","chartWrapper","stats","device","deviceIcon","color","primary","main","danger","warning","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n// Externals\nimport { Doughnut } from 'react-chartjs-2';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core';\n\n// Material components\nimport { IconButton, Typography } from '@material-ui/core';\n\n// Material icons\nimport {\n  LaptopMac as LaptopMacIcon,\n  PhoneIphone as PhoneIphoneIcon,\n  Refresh as RefreshIcon,\n  TabletMac as TabletMacIcon\n} from '@material-ui/icons';\n\n// Shared components\nimport {\n  Portlet,\n  PortletHeader,\n  PortletLabel,\n  PortletToolbar,\n  PortletContent\n} from 'components';\n\n// Palette\nimport palette from 'theme/palette';\n\n// Chart configuration\nimport { data, options } from './chart';\n\n// Component styles\nimport styles from './styles';\n\nclass DevicesChart extends Component {\n  render() {\n    const { classes, className, ...rest } = this.props;\n\n    const rootClassName = classNames(classes.root, className);\n\n    return (\n      <Portlet\n        {...rest}\n        className={rootClassName}\n      >\n        <PortletHeader noDivider>\n          <PortletLabel title=\"Users by device\" />\n          <PortletToolbar>\n            <IconButton\n              className={classes.refreshButton}\n              onClick={this.handleRefresh}\n              variant=\"text\"\n            >\n              <RefreshIcon />\n            </IconButton>\n          </PortletToolbar>\n        </PortletHeader>\n        <PortletContent>\n          <div className={classes.chartWrapper}>\n            <Doughnut\n              data={data}\n              options={options}\n            />\n          </div>\n          <div className={classes.stats}>\n            <div className={classes.device}>\n              <LaptopMacIcon className={classes.deviceIcon} />\n              <Typography variant=\"body1\">Desktop</Typography>\n              <Typography\n                style={{ color: palette.primary.main }}\n                variant=\"h2\"\n              >\n                63%\n              </Typography>\n            </div>\n            <div className={classes.device}>\n              <TabletMacIcon className={classes.deviceIcon} />\n              <Typography variant=\"body1\">Tablet</Typography>\n              <Typography\n                style={{ color: palette.danger.main }}\n                variant=\"h2\"\n              >\n                15%\n              </Typography>\n            </div>\n            <div className={classes.device}>\n              <PhoneIphoneIcon className={classes.deviceIcon} />\n              <Typography variant=\"body1\">Mobile</Typography>\n              <Typography\n                style={{ color: palette.warning.main }}\n                variant=\"h2\"\n              >\n                23%\n              </Typography>\n            </div>\n          </div>\n        </PortletContent>\n      </Portlet>\n    );\n  }\n}\n\nDevicesChart.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DevicesChart);\n"]},"metadata":{},"sourceType":"module"}