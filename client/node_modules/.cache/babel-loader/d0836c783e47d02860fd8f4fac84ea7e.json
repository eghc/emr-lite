{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/Bloc/capstone__/client/src/layouts/Dashboard/components/Topbar/components/NotificationList/index.jsx\";\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom'; // Externals\n\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames'; // Material helpers\n\nimport { withStyles } from '@material-ui/core'; // Material components\n\nimport { Button, Divider, List, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core'; // Material icons\n\nimport { ArrowForwardIos as ArrowForwardIosIcon, Payment as PaymentIcon, PeopleOutlined as PeopleIcon, Code as CodeIcon, Store as StoreIcon } from '@material-ui/icons'; // Component styles\n\nimport styles from './styles';\nconst icons = {\n  order: {\n    icon: React.createElement(PaymentIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }),\n    color: 'blue'\n  },\n  user: {\n    icon: React.createElement(PeopleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }),\n    color: 'red'\n  },\n  product: {\n    icon: React.createElement(StoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }),\n    color: 'green'\n  },\n  feature: {\n    icon: React.createElement(CodeIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }),\n    color: 'purple'\n  }\n};\n\nclass NotificationList extends Component {\n  render() {\n    const _this$props = this.props,\n          className = _this$props.className,\n          classes = _this$props.classes,\n          notifications = _this$props.notifications,\n          onSelect = _this$props.onSelect;\n    const rootClassName = classNames(classes.root, className);\n    return React.createElement(\"div\", {\n      className: rootClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, notifications.length > 0 ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"User Notifications\"), React.createElement(Typography, {\n      className: classes.subtitle,\n      variant: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, notifications.length, \" new notifications\")), React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(List, {\n      component: \"div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, notifications.map(notification => React.createElement(Link, {\n      key: notification.id,\n      to: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      className: classes.listItem,\n      component: \"div\",\n      onClick: onSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      className: classes.listItemIcon,\n      style: {\n        color: icons[notification.type].color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, icons[notification.type].icon), React.createElement(ListItemText, {\n      classes: {\n        secondary: classes.listItemTextSecondary\n      },\n      primary: notification.title,\n      secondary: notification.when,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(ArrowForwardIosIcon, {\n      className: classes.arrowForward,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: classes.footer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      component: Link,\n      size: \"small\",\n      to: \"#\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"See all\")))) : React.createElement(\"div\", {\n      className: classes.empty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.emptyImageWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"Empty list\",\n      className: classes.emptyImage,\n      src: \"/images/empty.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"There's nothing here...\")));\n  }\n\n}\n\nNotificationList.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  notifications: PropTypes.array.isRequired,\n  onSelect: PropTypes.func\n};\nNotificationList.defaultProps = {\n  notifications: [],\n  onSelect: () => {}\n};\nexport default withStyles(styles)(NotificationList);","map":{"version":3,"sources":["/Users/macuser/Documents/Bloc/capstone__/client/src/layouts/Dashboard/components/Topbar/components/NotificationList/index.jsx"],"names":["React","Component","Fragment","Link","PropTypes","classNames","withStyles","Button","Divider","List","ListItem","ListItemIcon","ListItemText","Typography","ArrowForwardIos","ArrowForwardIosIcon","Payment","PaymentIcon","PeopleOutlined","PeopleIcon","Code","CodeIcon","Store","StoreIcon","styles","icons","order","icon","color","user","product","feature","NotificationList","render","props","className","classes","notifications","onSelect","rootClassName","root","length","header","subtitle","content","map","notification","id","listItem","listItemIcon","type","secondary","listItemTextSecondary","title","when","arrowForward","footer","empty","emptyImageWrapper","emptyImage","propTypes","string","object","isRequired","array","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Externals\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core';\n\n// Material components\nimport {\n  Button,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\n\n// Material icons\nimport {\n  ArrowForwardIos as ArrowForwardIosIcon,\n  Payment as PaymentIcon,\n  PeopleOutlined as PeopleIcon,\n  Code as CodeIcon,\n  Store as StoreIcon\n} from '@material-ui/icons';\n\n// Component styles\nimport styles from './styles';\n\nconst icons = {\n  order: {\n    icon: <PaymentIcon />,\n    color: 'blue'\n  },\n  user: {\n    icon: <PeopleIcon />,\n    color: 'red'\n  },\n  product: {\n    icon: <StoreIcon />,\n    color: 'green'\n  },\n  feature: {\n    icon: <CodeIcon />,\n    color: 'purple'\n  }\n};\n\nclass NotificationList extends Component {\n  render() {\n    const { className, classes, notifications, onSelect } = this.props;\n\n    const rootClassName = classNames(classes.root, className);\n\n    return (\n      <div className={rootClassName}>\n        {notifications.length > 0 ? (\n          <Fragment>\n            <div className={classes.header}>\n              <Typography variant=\"h6\">User Notifications</Typography>\n              <Typography\n                className={classes.subtitle}\n                variant=\"body2\"\n              >\n                {notifications.length} new notifications\n              </Typography>\n            </div>\n            <div className={classes.content}>\n              <List component=\"div\">\n                {notifications.map(notification => (\n                  <Link\n                    key={notification.id}\n                    to=\"#\"\n                  >\n                    <ListItem\n                      className={classes.listItem}\n                      component=\"div\"\n                      onClick={onSelect}\n                    >\n                      <ListItemIcon\n                        className={classes.listItemIcon}\n                        style={{ color: icons[notification.type].color }}\n                      >\n                        {icons[notification.type].icon}\n                      </ListItemIcon>\n                      <ListItemText\n                        classes={{ secondary: classes.listItemTextSecondary }}\n                        primary={notification.title}\n                        secondary={notification.when}\n                      />\n                      <ArrowForwardIosIcon className={classes.arrowForward} />\n                    </ListItem>\n                    <Divider />\n                  </Link>\n                ))}\n              </List>\n              <div className={classes.footer}>\n                <Button\n                  color=\"primary\"\n                  component={Link}\n                  size=\"small\"\n                  to=\"#\"\n                  variant=\"contained\"\n                >\n                  See all\n                </Button>\n              </div>\n            </div>\n          </Fragment>\n        ) : (\n          <div className={classes.empty}>\n            <div className={classes.emptyImageWrapper}>\n              <img\n                alt=\"Empty list\"\n                className={classes.emptyImage}\n                src=\"/images/empty.png\"\n              />\n            </div>\n            <Typography variant=\"h4\">There's nothing here...</Typography>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nNotificationList.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  notifications: PropTypes.array.isRequired,\n  onSelect: PropTypes.func\n};\n\nNotificationList.defaultProps = {\n  notifications: [],\n  onSelect: () => {}\n};\n\nexport default withStyles(styles)(NotificationList);\n"]},"metadata":{},"sourceType":"module"}