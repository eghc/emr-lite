{"ast":null,"code":"var _jsxFileName = \"/Users/macuser/Documents/Bloc/capstone__/client/src/views/Dashboard/components/OrdersTable/index.jsx\";\nimport React, { Component } from 'react'; // Externals\n\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types'; // Material helpers\n\nimport { withStyles } from '@material-ui/core'; // Material components\n\nimport { Button, CircularProgress, Table, TableBody, TableCell, TableHead, TableRow, Tooltip, TableSortLabel } from '@material-ui/core'; // Shared services\n\nimport { getOrders } from 'services/order'; // Shared components\n\nimport { Portlet, PortletHeader, PortletLabel, PortletToolbar, PortletContent, Status } from 'components'; // Component styles\n\nimport styles from './styles';\nconst statusColors = {\n  delivered: 'success',\n  pending: 'info',\n  refund: 'danger'\n};\n\nclass OrdersTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.signal = false;\n    this.state = {\n      isLoading: false,\n      limit: 10,\n      orders: [],\n      ordersTotal: 0\n    };\n  }\n\n  async getOrders(limit) {\n    try {\n      this.setState({\n        isLoading: true\n      });\n\n      const _ref = await getOrders(limit),\n            orders = _ref.orders,\n            ordersTotal = _ref.ordersTotal;\n\n      if (this.signal) {\n        this.setState({\n          isLoading: false,\n          orders,\n          ordersTotal\n        });\n      }\n    } catch (error) {\n      if (this.signal) {\n        this.setState({\n          isLoading: false,\n          error\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.signal = true;\n    const limit = this.state.limit;\n    this.getOrders(limit);\n  }\n\n  componentWillUnmount() {\n    this.signal = false;\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          className = _this$props.className;\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          orders = _this$state.orders,\n          ordersTotal = _this$state.ordersTotal;\n    const rootClassName = classNames(classes.root, className);\n    const showOrders = !isLoading && orders.length > 0;\n    return React.createElement(Portlet, {\n      className: rootClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(PortletHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(PortletLabel, {\n      title: \"Appointments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(PortletLabel, {\n      title: \"Appointments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(PortletToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: classes.newEntryButton,\n      color: \"primary\",\n      size: \"small\",\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"+ Book Appointment\"))), React.createElement(PerfectScrollbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(PortletContent, {\n      className: classes.portletContent,\n      noPadding: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, isLoading && React.createElement(\"div\", {\n      className: classes.progressWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), showOrders && React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Appt ID\"), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Provider\"), React.createElement(TableCell, {\n      align: \"left\",\n      sortDirection: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      enterDelay: 300,\n      title: \"Sort\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(TableSortLabel, {\n      active: true,\n      direction: \"desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Date\"))), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Status\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, orders.map(order => React.createElement(TableRow, {\n      className: classes.tableRow,\n      hover: true,\n      key: order.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, order.id), React.createElement(TableCell, {\n      className: classes.customerCell,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, order.customer.name), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, moment(order.createdAt).format('DD/MM/YYYY')), React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.statusWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Status, {\n      className: classes.status,\n      color: statusColors[order.status],\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), order.status)))))))));\n  }\n\n}\n\nOrdersTable.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(OrdersTable);","map":{"version":3,"sources":["/Users/macuser/Documents/Bloc/capstone__/client/src/views/Dashboard/components/OrdersTable/index.jsx"],"names":["React","Component","classNames","moment","PerfectScrollbar","PropTypes","withStyles","Button","CircularProgress","Table","TableBody","TableCell","TableHead","TableRow","Tooltip","TableSortLabel","getOrders","Portlet","PortletHeader","PortletLabel","PortletToolbar","PortletContent","Status","styles","statusColors","delivered","pending","refund","OrdersTable","signal","state","isLoading","limit","orders","ordersTotal","setState","error","componentDidMount","componentWillUnmount","render","props","classes","className","rootClassName","root","showOrders","length","newEntryButton","portletContent","progressWrapper","map","order","tableRow","id","customerCell","customer","name","createdAt","format","statusWrapper","status","propTypes","string","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CAEA;;AACA,SACEC,MADF,EAEEC,gBAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,QAPF,EAQEC,OARF,EASEC,cATF,QAUO,mBAVP,C,CAYA;;AACA,SAASC,SAAT,QAA0B,gBAA1B,C,CAEA;;AACA,SACEC,OADF,EAEEC,aAFF,EAGEC,YAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,MANF,QAOO,YAPP,C,CASA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,SADQ;AAEnBC,EAAAA,OAAO,EAAE,MAFU;AAGnBC,EAAAA,MAAM,EAAE;AAHW,CAArB;;AAMA,MAAMC,WAAN,SAA0B3B,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClC4B,MADkC,GACzB,KADyB;AAAA,SAGlCC,KAHkC,GAG1B;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,WAAW,EAAE;AAJP,KAH0B;AAAA;;AAUlC,QAAMlB,SAAN,CAAgBgB,KAAhB,EAAuB;AACrB,QAAI;AACF,WAAKG,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;;AADE,mBAG8B,MAAMf,SAAS,CAACgB,KAAD,CAH7C;AAAA,YAGMC,MAHN,QAGMA,MAHN;AAAA,YAGcC,WAHd,QAGcA,WAHd;;AAKF,UAAI,KAAKL,MAAT,EAAiB;AACf,aAAKM,QAAL,CAAc;AACZJ,UAAAA,SAAS,EAAE,KADC;AAEZE,UAAAA,MAFY;AAGZC,UAAAA;AAHY,SAAd;AAKD;AACF,KAZD,CAYE,OAAOE,KAAP,EAAc;AACd,UAAI,KAAKP,MAAT,EAAiB;AACf,aAAKM,QAAL,CAAc;AACZJ,UAAAA,SAAS,EAAE,KADC;AAEZK,UAAAA;AAFY,SAAd;AAID;AACF;AACF;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,MAAL,GAAc,IAAd;AADkB,UAGVG,KAHU,GAGA,KAAKF,KAHL,CAGVE,KAHU;AAKlB,SAAKhB,SAAL,CAAegB,KAAf;AACD;;AAEDM,EAAAA,oBAAoB,GAAG;AACrB,SAAKT,MAAL,GAAc,KAAd;AACD;;AAEDU,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKC,KAD7B;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUC,SADV,eACUA,SADV;AAAA,wBAEoC,KAAKZ,KAFzC;AAAA,UAECC,SAFD,eAECA,SAFD;AAAA,UAEYE,MAFZ,eAEYA,MAFZ;AAAA,UAEoBC,WAFpB,eAEoBA,WAFpB;AAIP,UAAMS,aAAa,GAAGzC,UAAU,CAACuC,OAAO,CAACG,IAAT,EAAeF,SAAf,CAAhC;AACA,UAAMG,UAAU,GAAG,CAACd,SAAD,IAAcE,MAAM,CAACa,MAAP,GAAgB,CAAjD;AAEA,WACE,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAEH,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAC,cADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAC,cADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAOE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAEF,OAAO,CAACM,cADrB;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,OAAO,EAAC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAPF,CADF,EAmBE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AACE,MAAA,SAAS,EAAEN,OAAO,CAACO,cADrB;AAEE,MAAA,SAAS,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGjB,SAAS,IACR;AAAK,MAAA,SAAS,EAAEU,OAAO,CAACQ,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALJ,EASGJ,UAAU,IACT,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,aAAa,EAAC,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,OAAD;AACE,MAAA,UAAU,EAAE,GADd;AAEE,MAAA,KAAK,EAAC,MAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,cAAD;AACE,MAAA,MAAM,MADR;AAEE,MAAA,SAAS,EAAC,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAJF,CAHF,EAmBE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF,CADF,CADF,EAwBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,MAAM,CAACiB,GAAP,CAAWC,KAAK,IACf,oBAAC,QAAD;AACE,MAAA,SAAS,EAAEV,OAAO,CAACW,QADrB;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,GAAG,EAAED,KAAK,CAACE,EAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYF,KAAK,CAACE,EAAlB,CALF,EAME,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEZ,OAAO,CAACa,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,KAAK,CAACI,QAAN,CAAeC,IADlB,CANF,EASE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGrD,MAAM,CAACgD,KAAK,CAACM,SAAP,CAAN,CAAwBC,MAAxB,CAA+B,YAA/B,CADH,CATF,EAYE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEjB,OAAO,CAACkB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAElB,OAAO,CAACmB,MADrB;AAEE,MAAA,KAAK,EAAEpC,YAAY,CAAC2B,KAAK,CAACS,MAAP,CAFrB;AAGE,MAAA,IAAI,EAAC,IAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMGT,KAAK,CAACS,MANT,CADF,CAZF,CADD,CADH,CAxBF,CAVJ,CADF,CAnBF,CADF;AAwFD;;AA5IiC;;AA+IpChC,WAAW,CAACiC,SAAZ,GAAwB;AACtBnB,EAAAA,SAAS,EAAErC,SAAS,CAACyD,MADC;AAEtBrB,EAAAA,OAAO,EAAEpC,SAAS,CAAC0D,MAAV,CAAiBC;AAFJ,CAAxB;AAKA,eAAe1D,UAAU,CAACiB,MAAD,CAAV,CAAmBK,WAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\n\n// Externals\nimport classNames from 'classnames';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\n\n// Material helpers\nimport { withStyles } from '@material-ui/core';\n\n// Material components\nimport {\n  Button,\n  CircularProgress,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Tooltip,\n  TableSortLabel\n} from '@material-ui/core';\n\n// Shared services\nimport { getOrders } from 'services/order';\n\n// Shared components\nimport {\n  Portlet,\n  PortletHeader,\n  PortletLabel,\n  PortletToolbar,\n  PortletContent,\n  Status\n} from 'components';\n\n// Component styles\nimport styles from './styles';\n\nconst statusColors = {\n  delivered: 'success',\n  pending: 'info',\n  refund: 'danger'\n};\n\nclass OrdersTable extends Component {\n  signal = false;\n\n  state = {\n    isLoading: false,\n    limit: 10,\n    orders: [],\n    ordersTotal: 0\n  };\n\n  async getOrders(limit) {\n    try {\n      this.setState({ isLoading: true });\n\n      const { orders, ordersTotal } = await getOrders(limit);\n\n      if (this.signal) {\n        this.setState({\n          isLoading: false,\n          orders,\n          ordersTotal\n        });\n      }\n    } catch (error) {\n      if (this.signal) {\n        this.setState({\n          isLoading: false,\n          error\n        });\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.signal = true;\n\n    const { limit } = this.state;\n\n    this.getOrders(limit);\n  }\n\n  componentWillUnmount() {\n    this.signal = false;\n  }\n\n  render() {\n    const { classes, className } = this.props;\n    const { isLoading, orders, ordersTotal } = this.state;\n\n    const rootClassName = classNames(classes.root, className);\n    const showOrders = !isLoading && orders.length > 0;\n\n    return (\n      <Portlet className={rootClassName}>\n        <PortletHeader>\n          <PortletLabel\n            title=\"Appointments\"\n          />\n          <PortletLabel\n            title=\"Appointments\"\n          />\n          <PortletToolbar>\n            <Button\n              className={classes.newEntryButton}\n              color=\"primary\"\n              size=\"small\"\n              variant=\"outlined\"\n            >\n              + Book Appointment\n            </Button>\n          </PortletToolbar>\n        </PortletHeader>\n        <PerfectScrollbar>\n          <PortletContent\n            className={classes.portletContent}\n            noPadding\n          >\n            {isLoading && (\n              <div className={classes.progressWrapper}>\n                <CircularProgress />\n              </div>\n            )}\n            {showOrders && (\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Appt ID</TableCell>\n                    <TableCell align=\"left\">Provider</TableCell>\n                    <TableCell\n                      align=\"left\"\n                      sortDirection=\"desc\"\n                    >\n                      <Tooltip\n                        enterDelay={300}\n                        title=\"Sort\"\n                      >\n                        <TableSortLabel\n                          active\n                          direction=\"desc\"\n                        >\n                          Date\n                        </TableSortLabel>\n                      </Tooltip>\n                    </TableCell>\n                    <TableCell align=\"left\">Status</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.map(order => (\n                    <TableRow\n                      className={classes.tableRow}\n                      hover\n                      key={order.id}\n                    >\n                      <TableCell>{order.id}</TableCell>\n                      <TableCell className={classes.customerCell}>\n                        {order.customer.name}\n                      </TableCell>\n                      <TableCell>\n                        {moment(order.createdAt).format('DD/MM/YYYY')}\n                      </TableCell>\n                      <TableCell>\n                        <div className={classes.statusWrapper}>\n                          <Status\n                            className={classes.status}\n                            color={statusColors[order.status]}\n                            size=\"sm\"\n                          />\n                          {order.status}\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            )}\n          </PortletContent>\n        </PerfectScrollbar>\n      </Portlet>\n    );\n  }\n}\n\nOrdersTable.propTypes = {\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(OrdersTable);\n"]},"metadata":{},"sourceType":"module"}